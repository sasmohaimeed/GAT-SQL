SELECT * FROM airlines
SELECT * FROM airlines WHERE airlines.Airline = "value"
SELECT airlines.Country FROM airlines WHERE airlines.Airline = "value"

SELECT airlines.Abbreviation FROM airlines
SELECT airlines.Abbreviation FROM airlines WHERE airlines.Airline = "value"

SELECT airlines.Airline , airlines.Abbreviation FROM airlines
SELECT airlines.Airline , airlines.Abbreviation FROM airlines WHERE airlines.Country = "value"

SELECT * FROM airports WHERE airports.City = "value"
SELECT airports.AirportCode , airports.AirportName FROM airports WHERE airports.City = "value"

SELECT * FROM airlines
SELECT COUNT(*) FROM airlines

SELECT * FROM airports
SELECT COUNT(*) FROM airports

SELECT * FROM flights
SELECT COUNT(*) FROM flights

SELECT airlines.Airline FROM airlines
SELECT airlines.Airline FROM airlines WHERE airlines.Abbreviation LIKE "value"

SELECT airlines.Airline FROM airlines WHERE airlines.Country = "value"
SELECT COUNT(*) FROM airlines WHERE airlines.Country = "value"

SELECT airports.City , airports.Country FROM airports
SELECT airports.City , airports.Country FROM airports WHERE airports.AirportName = "value"

SELECT airports.AirportName FROM airports
SELECT airports.AirportName FROM airports WHERE airports.AirportCode = "value"

SELECT airports.AirportName FROM airports
SELECT airports.AirportName FROM airports WHERE airports.City = "value"

SELECT * FROM flights WHERE flights.SourceAirport = "value"
SELECT COUNT(*) FROM flights WHERE flights.SourceAirport = "value"

SELECT * FROM flights WHERE flights.DestAirport = "value"
SELECT COUNT(*) FROM flights WHERE flights.DestAirport = "value"

SELECT * FROM airports JOIN flights WHERE airports.City = "value"
SELECT COUNT(*) FROM airports JOIN flights WHERE airports.City = "value"

SELECT * FROM airports JOIN flights WHERE airports.City = "value"
SELECT COUNT(*) FROM airports JOIN flights WHERE airports.City = "value"

SELECT * FROM airports JOIN flights WHERE airports.City = "value"
SELECT * FROM flights JOIN airports WHERE airports.City = "value"
SELECT COUNT(*) FROM flights JOIN airports WHERE airports.City = "value"

SELECT * FROM flights JOIN airlines WHERE airlines.Airline = "value"
SELECT COUNT(*) FROM flights JOIN airlines WHERE airlines.Airline = "value"

SELECT * FROM flights JOIN airlines WHERE airlines.Airline = "value"
SELECT COUNT(*) FROM airlines JOIN flights WHERE airlines.Airline = "value"
SELECT COUNT(*) FROM flights JOIN airports WHERE airports.AirportName = "value" AND flights.DestAirport = "value"

SELECT * FROM flights JOIN airlines WHERE airlines.Airline = "value"
SELECT * FROM flights JOIN airlines WHERE airlines.Airline = "value" AND flights.SourceAirport = "value"
SELECT COUNT(*) FROM flights JOIN airlines WHERE airlines.Airline = "value" AND flights.SourceAirport = "value"

SELECT * FROM flights JOIN airports JOIN airlines WHERE airlines.Airline = "value" AND airports.City = "value"
SELECT COUNT(*) FROM airlines JOIN flights JOIN airports JOIN flights WHERE airlines.Airline = "value" AND airports.City = "value"

SELECT airports.City FROM airports
SELECT airports.City FROM airports JOIN flights GROUP BY airports.City ORDER BY COUNT(*) ASC
SELECT airports.City FROM airports JOIN flights GROUP BY airports.City ORDER BY COUNT(*) DESC LIMIT 1

SELECT airports.City FROM airports JOIN flights
SELECT airports.City FROM airports JOIN flights GROUP BY airports.City ORDER BY COUNT(*) ASC
SELECT airports.City FROM airports JOIN flights GROUP BY airports.City ORDER BY COUNT(*) DESC LIMIT 1

SELECT flights.DestAirport FROM flights
SELECT airports.AirportCode FROM airports UNION SELECT flights.DestAirport FROM flights
SELECT airports.AirportCode FROM airports JOIN flights GROUP BY airports.AirportCode ORDER BY COUNT(*) DESC LIMIT 1

SELECT flights.DestAirport FROM flights
SELECT airports.AirportCode FROM airports UNION SELECT flights.DestAirport FROM flights
SELECT airports.AirportCode FROM airports JOIN flights GROUP BY airports.AirportCode ORDER BY COUNT(*) ASC LIMIT 1

SELECT flights.Airline , COUNT(*) FROM flights GROUP BY flights.Airline
SELECT flights.Airline FROM flights GROUP BY flights.Airline ORDER BY COUNT(*) DESC LIMIT 1

SELECT airlines.Abbreviation , airlines.Country FROM airlines
SELECT airlines.Abbreviation , airlines.Country FROM airlines JOIN flights GROUP BY flights.Airline ORDER BY COUNT(*) ASC
SELECT airlines.Abbreviation , airlines.Country FROM airlines JOIN flights GROUP BY flights.Airline ORDER BY COUNT(*) ASC LIMIT 1

SELECT * FROM flights WHERE flights.SourceAirport = "value"
SELECT airlines.Airline FROM flights JOIN airlines WHERE flights.SourceAirport = "value"

SELECT flights.FlightNo FROM flights WHERE flights.DestAirport = "value"
SELECT airlines.Airline FROM flights JOIN airlines WHERE flights.DestAirport = "value"

SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = "value"
SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = "value" INTERSECT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = "value"

SELECT airlines.Airline FROM flights JOIN airlines WHERE flights.SourceAirport = "value"
SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = "value" EXCEPT SELECT airlines.Airline FROM airlines JOIN flights WHERE flights.SourceAirport = "value"

SELECT * FROM airlines
SELECT * FROM flights GROUP BY flights.Airline HAVING COUNT(*) > "value"

SELECT * FROM airlines
SELECT flights.Airline FROM flights GROUP BY flights.Airline HAVING COUNT(*) < "value"

SELECT flights.FlightNo FROM flights
SELECT flights.FlightNo FROM flights JOIN airlines WHERE airlines.Airline = "value"

SELECT flights.FlightNo FROM flights
SELECT flights.FlightNo FROM flights WHERE flights.SourceAirport = "value"

SELECT flights.FlightNo FROM flights
SELECT flights.FlightNo FROM flights WHERE flights.DestAirport = "value" OR flights.DestAirport = "value"

SELECT flights.FlightNo FROM flights
SELECT flights.FlightNo FROM flights
SELECT flights.FlightNo FROM flights JOIN airports WHERE airports.City = "value"

SELECT flights.FlightNo FROM flights
SELECT flights.FlightNo FROM flights WHERE flights.DestAirport = "value"
SELECT flights.FlightNo FROM flights JOIN airports WHERE airports.City = "value"

SELECT flights.FlightNo FROM flights JOIN airports WHERE airports.City = "value"
SELECT flights.FlightNo FROM flights JOIN airports WHERE airports.City = "value" OR airports.City = "value"
SELECT COUNT(*) FROM flights JOIN airports WHERE airports.City = "value" OR airports.City = "value"

SELECT flights.SourceAirport FROM flights
SELECT flights.SourceAirport , flights.DestAirport FROM flights
SELECT airports.AirportName FROM airports EXCEPT SELECT airports.AirportName FROM airports JOIN flights

SELECT * FROM Pets
SELECT * FROM Pets WHERE Pets.weight > "value"
SELECT COUNT(*) FROM Pets WHERE Pets.weight > "value"

SELECT * FROM Pets ORDER BY Pets.pet_age ASC
SELECT Pets.weight , Pets.pet_age FROM Pets ORDER BY Pets.pet_age ASC
SELECT Pets.weight FROM Pets ORDER BY Pets.pet_age ASC LIMIT 1

SELECT Pets.PetType FROM Pets
SELECT Pets.PetType , MAX(Pets.weight) FROM Pets GROUP BY Pets.PetType

SELECT * FROM Pets JOIN Has_Pet JOIN Student WHERE Student.Age > "value"
SELECT COUNT(*) FROM Has_Pet JOIN Pets JOIN Student WHERE Student.Age > "value"

SELECT * FROM Student WHERE Student.Sex = "value"
SELECT * FROM Student JOIN Has_Pet WHERE Student.Sex = "value"
SELECT COUNT(*) FROM Student JOIN Has_Pet JOIN Pets WHERE Student.Sex = "value" AND Student.Sex = "value"

SELECT Pets.PetType FROM Pets
SELECT COUNT(Pets.PetType) FROM Pets

SELECT Student.Fname FROM Student
SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = "value"
SELECT Student.Fname FROM Pets JOIN Has_Pet JOIN Student WHERE Pets.PetType = "value" OR Pets.PetType = "value"

SELECT * FROM Pets WHERE Pets.PetType = "value"
SELECT * FROM Pets JOIN Has_Pet JOIN Student WHERE Pets.PetType = "value" INTERSECT SELECT * FROM Pets JOIN Has_Pet JOIN Student WHERE Pets.PetType = "value"
SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = "value" INTERSECT SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = "value"

SELECT * FROM Pets JOIN Has_Pet WHERE Pets.PetType = "value"
SELECT Student.Major FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = "value"
SELECT Student.Major , Student.Age FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = "value"

SELECT Student.StuID FROM Student
SELECT Student.StuID FROM Student JOIN Has_Pet JOIN Pets WHERE Pets.PetType = "value"
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = "value" )

SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = "value"
SELECT Has_Pet.StuID FROM Pets JOIN Has_Pet WHERE Pets.PetType = "value" EXCEPT SELECT Has_Pet.StuID FROM Pets JOIN Has_Pet WHERE Pets.PetType = "value"
SELECT Student.Fname , Student.Age FROM Student WHERE Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = "value" EXCEPT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets WHERE Pets.PetType = "value" )

SELECT * FROM Pets ORDER BY Pets.pet_age ASC LIMIT 1
SELECT Pets.PetType FROM Pets ORDER BY Pets.pet_age ASC LIMIT 1
SELECT Pets.PetType , Pets.weight FROM Pets ORDER BY Pets.pet_age ASC LIMIT 1

SELECT Pets.PetID FROM Pets GROUP BY Pets.PetID
SELECT Pets.PetID FROM Pets WHERE Pets.pet_age > "value"
SELECT Pets.PetID , Pets.weight FROM Pets WHERE Pets.pet_age > "value"

SELECT Pets.PetType FROM Pets
SELECT Pets.PetType , MAX(Pets.pet_age) FROM Pets GROUP BY Pets.PetType
SELECT AVG(Pets.pet_age) FROM Pets

SELECT * FROM Pets
SELECT Pets.PetType , AVG(Pets.weight) FROM Pets GROUP BY Pets.PetType

SELECT Student.StuID FROM Student JOIN Has_Pet
SELECT Student.Fname FROM Student JOIN Has_Pet JOIN Pets
SELECT Student.Fname , Student.Age FROM Student JOIN Has_Pet JOIN Pets

SELECT Student.StuID FROM Student JOIN Has_Pet
SELECT Student.StuID FROM Student JOIN Has_Pet JOIN Pets WHERE Student.LName = "value"
SELECT Has_Pet.PetID FROM Student JOIN Has_Pet WHERE Student.LName = "value"

SELECT * FROM Student JOIN Has_Pet JOIN Pets
SELECT COUNT(*) , Has_Pet.StuID FROM Has_Pet GROUP BY Has_Pet.StuID

SELECT Student.Fname , Student.Sex FROM Student
SELECT Student.Fname , Student.Sex FROM Student JOIN Has_Pet GROUP BY Has_Pet.StuID HAVING COUNT(*) > "value"

SELECT Pets.PetID FROM Pets WHERE Pets.PetType = "value" AND Pets.pet_age = "value"
SELECT Student.LName FROM Has_Pet JOIN Pets JOIN Student WHERE Pets.PetType = "value" AND Pets.pet_age = "value"
SELECT Student.LName FROM Pets JOIN Has_Pet JOIN Student WHERE Pets.PetType = "value" AND Pets.pet_age = "value"

SELECT * FROM Student EXCEPT SELECT * FROM Student JOIN Has_Pet
SELECT AVG(Student.Age) FROM Student EXCEPT SELECT Student.Age FROM Student JOIN Has_Pet JOIN Pets

SELECT country.Name FROM country
SELECT country.Name FROM country WHERE country.IndepYear > "value"

SELECT COUNT(*) FROM country
SELECT COUNT(*) FROM country WHERE country.GovernmentForm = "value"

SELECT country.Name FROM country WHERE country.Region = "value"
SELECT country.Name , country.SurfaceArea FROM country WHERE country.Region = "value"
SELECT SUM(country.SurfaceArea) FROM country WHERE country.Region = "value" OR country.Region = "value"

SELECT country.Continent FROM country
SELECT country.Continent FROM country WHERE country.Name = "value"

SELECT country.Region FROM country
SELECT country.Region FROM city JOIN country WHERE city.Name = "value"

SELECT countrylanguage.Language FROM countrylanguage
SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Name = "value"
SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Name = "value" GROUP BY countrylanguage.Language ORDER BY COUNT(*) DESC LIMIT 1

SELECT country.Population , country.LifeExpectancy FROM country
SELECT country.Population , country.LifeExpectancy FROM country WHERE country.Name = "value"

SELECT country.Region FROM country WHERE country.Name = "value"
SELECT country.Population FROM country WHERE country.Name = "value"

SELECT country.LifeExpectancy FROM country
SELECT country.LifeExpectancy FROM country WHERE country.Region = "value"
SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Region = "value"

SELECT country.Name FROM country WHERE country.Continent = "value"
SELECT country.Name FROM country WHERE country.Continent = "value" ORDER BY country.LifeExpectancy ASC LIMIT 1

SELECT COUNT(*) FROM country WHERE country.Continent = "value"
SELECT COUNT(*) FROM country WHERE country.Continent = "value"

SELECT country.Name FROM country WHERE country.Continent = "value"
SELECT country.Name FROM country WHERE country.Continent = "value" AND country.GovernmentForm = "value"
SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Continent = "value" AND country.GovernmentForm = "value"

SELECT * FROM country WHERE country.Continent = "value" OR country.Continent = "value"
SELECT country.SurfaceArea FROM country WHERE country.Continent = "value" OR country.Continent = "value"
SELECT SUM(country.SurfaceArea) FROM country WHERE country.Continent = "value" OR country.Continent = "value"

SELECT city.Population FROM city WHERE city.District = "value"
SELECT SUM(city.Population) FROM city WHERE city.District = "value"

SELECT * FROM country
SELECT * FROM country WHERE country.GovernmentForm = "value"
SELECT AVG(country.GNP) , AVG(country.Population) FROM country WHERE country.GovernmentForm = "value"

SELECT countrylanguage.Language FROM countrylanguage
SELECT COUNT(countrylanguage.Language) FROM countrylanguage

SELECT country.GovernmentForm FROM country WHERE country.Continent = "value"
SELECT COUNT(country.GovernmentForm) FROM country WHERE country.Continent = "value"

SELECT * FROM country WHERE country.Name = "value"
SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Name = "value"
SELECT COUNT(countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.Name = "value"

SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Name = "value"
SELECT COUNT(countrylanguage.Language) FROM countrylanguage JOIN country WHERE country.Name = "value" AND countrylanguage.IsOfficial = "value"

SELECT COUNT(*) , country.Name FROM country JOIN countrylanguage GROUP BY country.Name
SELECT country.Name FROM country JOIN countrylanguage GROUP BY country.Name ORDER BY COUNT(*) DESC LIMIT 1

SELECT COUNT(*) , country.Continent FROM countrylanguage JOIN country GROUP BY country.Continent
SELECT country.Continent FROM country JOIN countrylanguage GROUP BY country.Continent ORDER BY COUNT(*) DESC LIMIT 1

SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value"
SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value" INTERSECT SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value"
SELECT COUNT(*) FROM ( SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value" INTERSECT SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value" )

SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value"
SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value" INTERSECT SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value"

SELECT countrylanguage.Language FROM countrylanguage
SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value"
SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value" INTERSECT SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value"

SELECT * FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value"
SELECT country.Continent FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value"
SELECT COUNT(country.Continent) FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value"

SELECT country.Region FROM country
SELECT country.Region FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value" OR countrylanguage.Language = "value"

SELECT countrylanguage.Language FROM countrylanguage
SELECT countrylanguage.Language FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value" OR countrylanguage.Language = "value"

SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Continent = "value"
SELECT countrylanguage.Language FROM countrylanguage JOIN country WHERE country.Continent = "value" GROUP BY countrylanguage.Language ORDER BY COUNT(*) DESC LIMIT 1

SELECT * FROM country WHERE country.GovernmentForm = "value"
SELECT countrylanguage.Language FROM country JOIN countrylanguage WHERE country.GovernmentForm = "value" GROUP BY countrylanguage.Language HAVING COUNT(*) = "value"

SELECT city.Name FROM city JOIN countrylanguage WHERE countrylanguage.Language = "value"
SELECT city.Name FROM city JOIN countrylanguage WHERE countrylanguage.Language = "value" ORDER BY city.Population DESC LIMIT 1

SELECT country.Name , country.Population , country.LifeExpectancy FROM country WHERE country.Continent = "value"
SELECT country.Name , country.Population , country.LifeExpectancy FROM country WHERE country.Continent = "value" ORDER BY country.SurfaceArea DESC LIMIT 1

SELECT countrylanguage.Language FROM countrylanguage
SELECT * FROM country JOIN countrylanguage WHERE countrylanguage.Language != "value"
SELECT AVG(country.LifeExpectancy) FROM country JOIN countrylanguage WHERE countrylanguage.Language != "value"

SELECT country.Name FROM country EXCEPT SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value"
SELECT COUNT(*) FROM country WHERE country.Name != ( SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value" )

SELECT * FROM country WHERE country.HeadOfState = "value"
SELECT countrylanguage.Language FROM country JOIN countrylanguage WHERE country.HeadOfState = "value"
SELECT countrylanguage.Language FROM country JOIN countrylanguage WHERE countrylanguage.IsOfficial = ( SELECT countrylanguage.Language FROM country JOIN countrylanguage WHERE country.HeadOfState = "value" )

SELECT country.Name FROM country
SELECT country.Name FROM country WHERE country.IndepYear > "value"
SELECT COUNT(countrylanguage.Language) FROM country JOIN countrylanguage WHERE country.IndepYear > "value"

SELECT * FROM country WHERE country.Region = "value"
SELECT MIN(country.SurfaceArea) FROM country WHERE country.Region = "value"
SELECT * FROM country WHERE country.SurfaceArea > ( SELECT MIN(country.SurfaceArea) FROM country WHERE country.Region = "value" )

SELECT MAX(country.Population) FROM country WHERE country.Continent = "value"
SELECT country.Population FROM country WHERE country.Population < ( SELECT MAX(country.Population) FROM country WHERE country.Continent = "value" )

SELECT MIN(country.Population) FROM country WHERE country.Continent = "value"
SELECT * FROM country WHERE country.Population > ( SELECT MIN(country.Population) FROM country WHERE country.Continent = "value" )

SELECT country.Code FROM country
SELECT country.Code FROM country EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = "value"

SELECT country.Code FROM country
SELECT country.Code FROM country EXCEPT SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = "value"

SELECT country.Code FROM country WHERE country.GovernmentForm != "value"
SELECT country.Code FROM country EXCEPT SELECT country.Code FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value"

SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value"
SELECT country.Name FROM country EXCEPT SELECT country.Name FROM country JOIN countrylanguage WHERE countrylanguage.Language = "value"
SELECT city.Name FROM city WHERE city.Name = "value" EXCEPT SELECT city.Name FROM city JOIN country JOIN countrylanguage WHERE countrylanguage.Language = "value"

SELECT country.Name FROM country JOIN countrylanguage WHERE country.Continent = "value"
SELECT country.Name FROM country JOIN countrylanguage WHERE country.Continent = "value" AND countrylanguage.IsOfficial = "value"
SELECT city.Name FROM city JOIN country JOIN countrylanguage WHERE countrylanguage.IsOfficial = "value" AND countrylanguage.Language = "value"

SELECT * FROM country ORDER BY country.Population ASC LIMIT 1
SELECT country.Name , country.IndepYear , country.SurfaceArea FROM country ORDER BY country.Population ASC LIMIT 1

SELECT * FROM country ORDER BY country.SurfaceArea DESC LIMIT 1
SELECT country.Population , country.Name , country.HeadOfState FROM country ORDER BY country.SurfaceArea DESC LIMIT 1

SELECT country.Name FROM country
SELECT country.Name FROM country JOIN countrylanguage GROUP BY country.Name HAVING COUNT(*) >= "value"
SELECT COUNT(*) , country.Name FROM country JOIN countrylanguage GROUP BY country.Name HAVING COUNT(*) >= "value"

SELECT AVG(city.Population) , MAX(city.Population) FROM city
SELECT COUNT(*) , city.District FROM city WHERE city.Population > ( SELECT AVG(city.Population) FROM city ) GROUP BY city.District

SELECT country.GovernmentForm FROM country GROUP BY country.GovernmentForm HAVING AVG(country.LifeExpectancy) > "value"
SELECT AVG(country.LifeExpectancy) , country.GovernmentForm FROM country GROUP BY country.GovernmentForm HAVING AVG(country.LifeExpectancy) > "value"

SELECT country.Continent FROM country GROUP BY country.Continent HAVING AVG(country.LifeExpectancy) < "value"
SELECT AVG(country.LifeExpectancy) , AVG(country.Population) FROM country GROUP BY country.Continent HAVING AVG(country.LifeExpectancy) < "value"

SELECT country.Name FROM country ORDER BY country.SurfaceArea DESC LIMIT 1
SELECT country.SurfaceArea , country.Name FROM country ORDER BY country.SurfaceArea DESC LIMIT 1

SELECT * FROM country ORDER BY country.Population DESC
SELECT country.Name FROM country ORDER BY country.Population DESC LIMIT 1

SELECT * FROM country ORDER BY country.Population ASC
SELECT country.Name FROM country ORDER BY country.Population ASC LIMIT 1

SELECT * FROM country WHERE country.Continent = "value"
SELECT COUNT(*) FROM country WHERE country.Continent = "value"

SELECT country.Name FROM country WHERE country.Continent = "value"
SELECT country.Name FROM country WHERE country.Continent = "value" AND country.Population LIKE "value"

SELECT country.Name FROM country WHERE country.Continent = "value"
SELECT country.Name FROM country WHERE country.Continent = "value" AND country.SurfaceArea > "value"
SELECT AVG(country.Population) , country.SurfaceArea FROM country WHERE country.Continent = "value" AND country.SurfaceArea > "value"

SELECT city.Name FROM city
SELECT city.Name FROM city WHERE city.Population BETWEEN "value" AND "value"

SELECT countrylanguage.Language FROM countrylanguage
SELECT countrylanguage.Language FROM countrylanguage GROUP BY countrylanguage.Language ORDER BY COUNT(*) DESC LIMIT 1

SELECT Cartoon.Directed_by FROM Cartoon WHERE Cartoon.Title = "value"
SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Title = "value"
SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = "value" OR Cartoon.Directed_by = "value"

SELECT * FROM TV_Channel WHERE TV_Channel.Language = "value"
SELECT * FROM TV_Channel WHERE TV_Channel.Language = "value"
SELECT TV_Channel.Country , COUNT(*) FROM TV_Channel GROUP BY TV_Channel.Country ORDER BY COUNT(*) DESC LIMIT 1

SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Title = "value"
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon WHERE Cartoon.Title = "value"
SELECT COUNT(TV_Channel.series_name) , TV_Channel.Content FROM TV_Channel

SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.series_name = "value"
SELECT TV_Channel.Language FROM TV_Channel WHERE TV_Channel.series_name = "value"
SELECT TV_Channel.Language , COUNT(*) FROM TV_Channel GROUP BY TV_Channel.Language ORDER BY COUNT(*) ASC LIMIT 1

SELECT Cartoon.Written_by FROM Cartoon WHERE Cartoon.Title = "value"
SELECT Cartoon.Directed_by FROM Cartoon WHERE Cartoon.Title = "value"
SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Title = "value"

SELECT TV_Channel.Country FROM TV_Channel WHERE TV_Channel.series_name = "value"
SELECT TV_Channel.Content FROM TV_Channel WHERE TV_Channel.series_name = "value"
SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel WHERE TV_Channel.series_name = "value"

SELECT TV_series.Rating FROM TV_series WHERE TV_series.Episode = "value"
SELECT TV_series.Rating FROM TV_series WHERE TV_series.Episode = "value"
SELECT TV_series.Episode , TV_series.Rating FROM TV_series ORDER BY TV_series.Rating DESC LIMIT 1

SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = "value"
SELECT TV_series.Share FROM TV_series WHERE TV_series.Episode = "value"
SELECT MIN(TV_series.Share) , MAX(TV_series.Share) FROM TV_series

SELECT TV_series.Rating FROM TV_series WHERE TV_series.Episode = "value"
SELECT TV_series.Weekly_Rank FROM TV_series WHERE TV_series.Episode = "value"
SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series WHERE TV_series.Episode = "value"

SELECT TV_Channel.Content FROM TV_Channel WHERE TV_Channel.series_name = "value"
SELECT TV_Channel.Language FROM TV_Channel WHERE TV_Channel.series_name = "value"
SELECT TV_series.Episode FROM TV_series JOIN TV_Channel WHERE TV_Channel.series_name = "value"

SELECT Cartoon.Original_air_date FROM Cartoon WHERE Cartoon.Title = "value"
SELECT Cartoon.Production_code FROM Cartoon WHERE Cartoon.Title = "value"
SELECT Cartoon.Production_code , Cartoon.Channel FROM Cartoon ORDER BY Cartoon.Original_air_date DESC LIMIT 1

SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = "value"
SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Written_by = "value"
SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Written_by = "value"

SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Written_by = "value"
SELECT TV_Channel.Country FROM TV_Channel EXCEPT SELECT TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Written_by = "value"

SELECT Cartoon.Directed_by FROM Cartoon WHERE Cartoon.Title = "value"
SELECT Cartoon.Production_code FROM Cartoon WHERE Cartoon.Title = "value"
SELECT TV_Channel.series_name , TV_Channel.Country FROM TV_Channel JOIN Cartoon WHERE Cartoon.Directed_by = "value" OR Cartoon.Directed_by = "value"

SELECT TV_Channel.Country FROM TV_Channel WHERE TV_Channel.series_name = "value"
SELECT COUNT(*) FROM TV_Channel WHERE TV_Channel.Language = "value"
SELECT TV_Channel.id FROM TV_Channel GROUP BY TV_Channel.Country HAVING COUNT(*) > "value"

SELECT Cartoon.Directed_by FROM Cartoon WHERE Cartoon.Title = "value"
SELECT Cartoon.Title FROM Cartoon WHERE Cartoon.Directed_by = "value"
SELECT TV_Channel.id FROM TV_Channel EXCEPT SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = "value"

SELECT * FROM poker_player
SELECT COUNT(*) FROM poker_player

SELECT poker_player.Earnings FROM poker_player
SELECT poker_player.Earnings FROM poker_player ORDER BY poker_player.Earnings DESC

SELECT * FROM poker_player
SELECT poker_player.Final_Table_Made FROM poker_player
SELECT poker_player.Final_Table_Made , poker_player.Best_Finish FROM poker_player

SELECT poker_player.Earnings FROM poker_player
SELECT AVG(poker_player.Earnings) FROM poker_player

SELECT poker_player.Money_Rank FROM poker_player
SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Money_Rank DESC
SELECT poker_player.Money_Rank FROM poker_player ORDER BY poker_player.Money_Rank DESC LIMIT 1

SELECT * FROM poker_player WHERE poker_player.Earnings < "value"
SELECT COUNT(poker_player.Final_Table_Made) FROM poker_player WHERE poker_player.Earnings < "value"

SELECT * FROM poker_player
SELECT people.Name FROM poker_player JOIN people

SELECT people.Name FROM poker_player JOIN people WHERE poker_player.Earnings > "value"
SELECT people.Name FROM poker_player JOIN people WHERE poker_player.Earnings > "value"

SELECT people.Name FROM poker_player JOIN people
SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Final_Table_Made ASC

SELECT people.Birth_Date FROM poker_player JOIN people
SELECT people.Birth_Date FROM poker_player JOIN people ORDER BY poker_player.Earnings ASC
SELECT people.Birth_Date FROM poker_player JOIN people ORDER BY poker_player.Earnings ASC LIMIT 1

SELECT people.Height FROM poker_player JOIN people
SELECT people.Name FROM poker_player JOIN people ORDER BY people.Height DESC LIMIT 1
SELECT poker_player.Money_Rank FROM poker_player JOIN people ORDER BY people.Height DESC LIMIT 1

SELECT people.Height FROM poker_player JOIN people
SELECT * FROM poker_player JOIN people WHERE people.Height > "value"
SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people WHERE people.Height > "value"

SELECT * FROM poker_player ORDER BY poker_player.Earnings DESC
SELECT people.Name FROM poker_player JOIN people ORDER BY poker_player.Earnings DESC

SELECT people.Nationality FROM people
SELECT COUNT(*) FROM people GROUP BY people.Nationality
SELECT people.Nationality , COUNT(*) FROM people GROUP BY people.Nationality

SELECT people.Nationality FROM people
SELECT people.Nationality , COUNT(*) FROM people GROUP BY people.Nationality
SELECT people.Nationality FROM people GROUP BY people.Nationality ORDER BY COUNT(*) DESC LIMIT 1

SELECT people.Nationality , COUNT(*) FROM people GROUP BY people.Nationality
SELECT people.Nationality FROM people GROUP BY people.Nationality HAVING COUNT(*) >= "value"

SELECT people.Name , people.Birth_Date FROM people
SELECT people.Name , people.Birth_Date FROM people ORDER BY people.Name ASC

SELECT people.Name FROM people
SELECT people.Name FROM people WHERE people.Nationality != "value"

SELECT * FROM poker_player
SELECT people.Name FROM people WHERE people.People_ID NOT IN ( SELECT poker_player.People_ID FROM poker_player )
SELECT people.Name FROM people WHERE people.People_ID NOT IN ( SELECT poker_player.People_ID FROM poker_player )

SELECT death.killed , death.killed FROM death
SELECT MAX(death.killed) FROM death
SELECT MIN(death.killed) FROM death
SELECT MAX(death.killed) , MIN(death.killed) FROM death

SELECT death.killed FROM death
SELECT death.killed FROM death JOIN ship WHERE ship.tonnage = "value"
SELECT death.killed , death.injured FROM death JOIN ship WHERE ship.tonnage = "value"

SELECT battle.id , battle.name FROM battle
SELECT battle.id , battle.name FROM battle JOIN ship
SELECT battle.id , battle.name FROM ship JOIN battle WHERE ship.ship_type = "value"

SELECT death.killed , death.injured FROM death
SELECT death.killed FROM death WHERE death.killed >= "value"

SELECT ship.id , ship.name FROM death JOIN ship
SELECT ship.id , ship.name FROM death JOIN ship ORDER BY death.injured DESC
SELECT ship.id , ship.name FROM ship JOIN death GROUP BY ship.id ORDER BY SUM(death.injured) DESC LIMIT 1

SELECT battle.name FROM battle WHERE battle.bulgarian_commander = "value"
SELECT battle.name FROM battle WHERE battle.latin_commander = "value"
SELECT battle.name FROM battle WHERE battle.latin_commander = "value"

SELECT ship.lost_in_battle FROM ship WHERE ship.tonnage = "value"
SELECT battle.name , ship.lost_in_battle FROM battle JOIN ship WHERE ship.tonnage = "value"
SELECT battle.id , battle.name FROM battle WHERE battle.id NOT IN ( SELECT ship.lost_in_battle FROM ship WHERE ship.tonnage = "value" )
SELECT COUNT(*) , battle.id FROM battle WHERE battle.id NOT IN ( SELECT ship.lost_in_battle FROM ship WHERE ship.tonnage = "value" )

SELECT battle.name , battle.date FROM battle JOIN ship WHERE ship.name = "value"
SELECT battle.name , battle.date FROM battle JOIN ship WHERE ship.name = "value"
SELECT battle.name , battle.date FROM battle JOIN ship WHERE ship.name = "value" INTERSECT SELECT battle.name , battle.date FROM battle JOIN ship WHERE ship.name = "value"

SELECT battle.id , battle.name FROM battle JOIN ship WHERE ship.location = "value"
SELECT battle.id , battle.name FROM battle JOIN ship WHERE ship.location != "value"
SELECT battle.name , battle.result , battle.bulgarian_commander FROM battle EXCEPT SELECT battle.name , battle.result , battle.bulgarian_commander FROM battle JOIN ship WHERE ship.location = "value"

SELECT COUNT(*) FROM continents
SELECT continents.ContId , continents.Continent FROM continents
SELECT continents.Continent , countries.CountryName FROM countries JOIN continents
SELECT continents.Continent , COUNT(*) FROM continents JOIN countries GROUP BY continents.Continent

SELECT car_makers.FullName , car_makers.Id FROM car_makers
SELECT car_makers.FullName , car_makers.Id , car_makers.Country FROM car_makers
SELECT car_makers.FullName , car_makers.Id , car_makers.Country , COUNT(*) FROM car_makers JOIN model_list GROUP BY car_makers.Id
SELECT car_makers.FullName , car_makers.Id , COUNT(*) FROM car_makers JOIN model_list GROUP BY car_makers.Id

SELECT AVG(cars_data.Horsepower) FROM cars_data
SELECT MAX(cars_data.Horsepower) FROM cars_data
SELECT MIN(cars_data.Horsepower) FROM cars_data
SELECT car_names.Model FROM car_names JOIN cars_data WHERE cars_data.Horsepower = ( SELECT MAX(cars_data.Horsepower) FROM cars_data )

SELECT AVG(cars_data.Weight) FROM cars_data
SELECT * FROM cars_data WHERE cars_data.Weight > ( SELECT AVG(cars_data.Weight) FROM cars_data )
SELECT * FROM cars_data WHERE cars_data.Weight < ( SELECT AVG(cars_data.Weight) FROM cars_data )
SELECT car_names.Model FROM cars_data JOIN car_names WHERE cars_data.Weight < ( SELECT AVG(cars_data.Weight) FROM cars_data )

SELECT cars_data.Id , car_names.Model FROM cars_data JOIN car_names WHERE cars_data.Year = "value"
SELECT cars_data.Id , cars_data.Horsepower , cars_data.MPG FROM cars_data JOIN car_names WHERE cars_data.Year = "value"
SELECT cars_data.Id , car_makers.FullName , cars_data.Horsepower , cars_data.MPG FROM model_list JOIN car_makers JOIN cars_data WHERE cars_data.Year = "value"
SELECT car_makers.Maker , car_makers.FullName , cars_data.Horsepower , cars_data.MPG FROM model_list JOIN car_makers JOIN cars_data WHERE cars_data.Year = "value"

SELECT car_names.Make , car_names.Model FROM car_names
SELECT car_names.Make , car_names.Model , cars_data.Year FROM car_names JOIN cars_data
SELECT car_names.Make , car_names.Model FROM car_names JOIN cars_data ORDER BY cars_data.Year ASC LIMIT 1
SELECT car_names.Make , cars_data.Year FROM car_names JOIN cars_data ORDER BY cars_data.Year ASC LIMIT 1

SELECT car_names.Model FROM car_names
SELECT car_names.Model , car_names.Make , cars_data.Year FROM car_names JOIN cars_data
SELECT car_names.Model , car_names.Make , cars_data.Year FROM car_names JOIN cars_data WHERE cars_data.Year > "value"
SELECT car_names.Model FROM car_names JOIN cars_data WHERE cars_data.Year > "value"

SELECT car_makers.FullName , countries.CountryName FROM countries JOIN car_makers
SELECT car_makers.FullName , continents.Continent , countries.CountryName FROM countries JOIN continents JOIN car_makers
SELECT continents.Continent , countries.CountryName , COUNT(*) FROM countries JOIN continents JOIN car_makers GROUP BY continents.Continent

SELECT COUNT(*) FROM countries
SELECT countries.CountryName , COUNT(*) FROM countries JOIN car_makers GROUP BY countries.CountryName
SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryName ORDER BY COUNT(*) ASC LIMIT 1
SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryName ORDER BY COUNT(*) DESC LIMIT 1

SELECT COUNT(*) FROM car_makers
SELECT car_makers.FullName , car_makers.Id FROM car_makers
SELECT car_makers.FullName , car_makers.Id , COUNT(*) FROM car_makers JOIN model_list GROUP BY car_makers.Id
SELECT car_makers.FullName , car_makers.Id , COUNT(*) FROM car_makers JOIN model_list GROUP BY car_makers.Id

SELECT car_names.MakeId FROM car_names WHERE car_names.Make = "value"
SELECT cars_data.Horsepower FROM cars_data JOIN car_names WHERE car_names.Make = "value"
SELECT cars_data.MPG FROM cars_data JOIN car_names WHERE car_names.Make = "value"
SELECT cars_data.Accelerate FROM cars_data JOIN car_names WHERE car_names.Make = "value"

SELECT * FROM car_makers
SELECT countries.CountryName FROM car_makers JOIN countries
SELECT countries.CountryName FROM car_makers JOIN countries WHERE countries.CountryName = "value"
SELECT COUNT(*) FROM car_makers JOIN countries WHERE countries.CountryName = "value"

SELECT COUNT(*) FROM model_list
SELECT COUNT(*) FROM countries JOIN car_makers WHERE countries.CountryName = "value"
SELECT COUNT(*) FROM countries JOIN car_makers WHERE countries.CountryName = "value"
SELECT COUNT(*) FROM countries JOIN car_makers WHERE countries.CountryName = "value"

SELECT * FROM cars_data WHERE cars_data.Year = "value"
SELECT cars_data.Weight , cars_data.Cylinders FROM cars_data WHERE cars_data.Year = "value"
SELECT cars_data.Weight , cars_data.Cylinders FROM cars_data WHERE cars_data.Year = "value" AND cars_data.Cylinders = "value"
SELECT MIN(cars_data.Weight) FROM cars_data WHERE cars_data.Year = "value" AND cars_data.Cylinders = "value"

SELECT countries.CountryName FROM countries
SELECT countries.CountryName FROM countries WHERE countries.CountryId NOT IN ( SELECT car_makers.Country FROM car_makers )
SELECT countries.CountryName FROM countries JOIN car_makers
SELECT countries.CountryId , countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryId HAVING COUNT(*) >= "value"

SELECT * , countries.CountryName FROM countries JOIN car_makers
SELECT countries.CountryName , COUNT(*) FROM countries JOIN car_makers GROUP BY countries.CountryName
SELECT countries.CountryName , COUNT(*) FROM car_makers JOIN countries JOIN continents WHERE continents.Continent = "value" GROUP BY countries.CountryName
SELECT countries.CountryName FROM countries JOIN car_makers JOIN continents WHERE continents.Continent = "value" GROUP BY countries.CountryName HAVING COUNT(*) >= "value"

SELECT cars_data.Horsepower , car_names.Make FROM cars_data JOIN car_names
SELECT cars_data.Horsepower , car_names.Make FROM cars_data JOIN car_names WHERE cars_data.Cylinders = "value"
SELECT cars_data.Horsepower , car_names.Make FROM cars_data JOIN car_names WHERE cars_data.Cylinders = "value"
SELECT car_names.Make , cars_data.Horsepower FROM car_names JOIN cars_data WHERE cars_data.Cylinders = "value" ORDER BY cars_data.Horsepower DESC LIMIT 1

SELECT cars_data.Id FROM cars_data ORDER BY cars_data.Horsepower DESC LIMIT 1
SELECT cars_data.Id FROM cars_data ORDER BY cars_data.MPG DESC LIMIT 1
SELECT car_names.Make FROM car_names JOIN cars_data ORDER BY cars_data.MPG DESC LIMIT 1
SELECT car_names.Model FROM car_names JOIN cars_data ORDER BY cars_data.MPG DESC LIMIT 1

SELECT AVG(cars_data.Edispl) FROM cars_data
SELECT car_names.Make , AVG(cars_data.Edispl) FROM cars_data JOIN car_names GROUP BY car_names.Make
SELECT car_names.Make , AVG(cars_data.Edispl) FROM cars_data JOIN car_names GROUP BY car_names.Make
SELECT AVG(cars_data.Edispl) , car_names.Model FROM cars_data JOIN car_names WHERE car_names.Make = "value" GROUP BY car_names.Model

SELECT car_names.Model FROM car_names
SELECT car_names.Model , car_names.Make FROM car_names
SELECT car_names.Model , COUNT(*) FROM car_names GROUP BY car_names.Model
SELECT car_names.Model FROM car_names GROUP BY car_names.Model ORDER BY COUNT(*) DESC LIMIT 1

SELECT car_makers.FullName FROM car_makers
SELECT car_makers.FullName , model_list.Model FROM car_makers JOIN model_list
SELECT car_makers.FullName , model_list.Model FROM model_list JOIN car_makers WHERE car_makers.FullName = "value"
SELECT COUNT(*) FROM car_makers JOIN model_list WHERE car_makers.FullName = "value"

SELECT * FROM car_makers JOIN model_list
SELECT * FROM car_makers JOIN model_list GROUP BY model_list.Maker HAVING COUNT(*) > "value"
SELECT * FROM car_makers JOIN model_list GROUP BY model_list.Maker HAVING COUNT(*) > "value"
SELECT car_makers.FullName , model_list.Maker FROM car_makers JOIN model_list GROUP BY model_list.Maker HAVING COUNT(*) > "value"

SELECT COUNT(model_list.Model) FROM model_list JOIN car_makers WHERE car_makers.FullName = "value"
SELECT COUNT(model_list.Model) FROM model_list JOIN car_makers JOIN car_makers WHERE car_makers.FullName > "value"
SELECT COUNT(*) FROM model_list JOIN car_makers WHERE car_makers.FullName = "value" OR model_list.Model > "value"
SELECT model_list.Model FROM model_list JOIN car_makers WHERE car_makers.FullName = "value" OR model_list.Model > "value"

SELECT cars_data.Year , cars_data.Weight FROM cars_data
SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight > "value"
SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < "value"
SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight > "value" INTERSECT SELECT cars_data.Year FROM cars_data WHERE cars_data.Weight < "value"

SELECT MIN(cars_data.Accelerate) FROM cars_data
SELECT MAX(cars_data.Accelerate) FROM cars_data
SELECT cars_data.Id , car_names.Make , car_names.Model FROM cars_data JOIN car_names ORDER BY cars_data.Accelerate DESC LIMIT 1
SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Accelerate DESC LIMIT 1

SELECT * FROM cars_data JOIN car_names WHERE car_names.Model = "value"
SELECT * FROM cars_data JOIN car_names WHERE car_names.Model = "value" ORDER BY cars_data.Accelerate ASC LIMIT 1
SELECT cars_data.Horsepower FROM car_names JOIN cars_data WHERE car_names.Model = "value" ORDER BY cars_data.Accelerate ASC LIMIT 1
SELECT cars_data.Cylinders FROM car_names JOIN cars_data WHERE car_names.Model = "value" ORDER BY cars_data.Accelerate ASC LIMIT 1

SELECT MAX(cars_data.Horsepower) FROM cars_data
SELECT cars_data.Accelerate FROM cars_data WHERE cars_data.Horsepower = ( SELECT MAX(cars_data.Horsepower) FROM cars_data )
SELECT cars_data.Id FROM cars_data WHERE cars_data.Accelerate > ( SELECT MAX(cars_data.Accelerate) FROM cars_data WHERE cars_data.Horsepower > ( SELECT MAX(cars_data.Accelerate) FROM cars_data ) )
SELECT COUNT(*) FROM cars_data WHERE cars_data.Accelerate > ( SELECT MAX(cars_data.Accelerate) FROM cars_data WHERE cars_data.Horsepower < "value" )

SELECT countries.CountryName FROM countries EXCEPT SELECT countries.CountryName FROM countries JOIN car_makers
SELECT countries.CountryName FROM countries EXCEPT SELECT countries.CountryName FROM countries JOIN car_makers
SELECT COUNT(*) FROM ( SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryName HAVING COUNT(*) > "value" )
SELECT COUNT(*) FROM ( SELECT countries.CountryName FROM countries JOIN car_makers GROUP BY countries.CountryName HAVING COUNT(*) > "value" )

SELECT car_names.Model , cars_data.Horsepower FROM car_names JOIN cars_data
SELECT car_names.Model , cars_data.Horsepower FROM car_names JOIN cars_data WHERE cars_data.Cylinders = "value"
SELECT car_names.Model FROM car_names JOIN cars_data WHERE cars_data.Cylinders = "value" ORDER BY cars_data.Horsepower ASC LIMIT 1
SELECT car_names.Model FROM car_names JOIN cars_data WHERE cars_data.Cylinders = "value" ORDER BY cars_data.Horsepower DESC LIMIT 1

SELECT MIN(cars_data.Horsepower) FROM cars_data
SELECT car_names.MakeId , car_names.Make FROM cars_data JOIN car_names WHERE cars_data.Horsepower > ( SELECT AVG(cars_data.Horsepower) FROM cars_data )
SELECT car_names.MakeId , car_names.Make FROM cars_data JOIN car_names WHERE cars_data.Cylinders <= "value"
SELECT car_names.MakeId , car_names.Make FROM cars_data JOIN car_names WHERE cars_data.Cylinders <= "value"

SELECT cars_data.MPG , cars_data.Horsepower , cars_data.Accelerate FROM cars_data WHERE cars_data.Year < "value"
SELECT cars_data.MPG , cars_data.Horsepower , cars_data.Accelerate FROM cars_data WHERE cars_data.Cylinders = "value" OR cars_data.Year < "value"
SELECT MAX(cars_data.Horsepower) , MIN(cars_data.Horsepower) , AVG(cars_data.Accelerate) FROM cars_data WHERE cars_data.Cylinders = "value" OR cars_data.Year < "value"
SELECT MAX(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = "value" OR cars_data.Year < "value"

SELECT model_list.Model FROM car_makers JOIN model_list WHERE car_makers.FullName = "value"
SELECT model_list.Model FROM model_list EXCEPT SELECT model_list.Model FROM car_makers JOIN model_list WHERE car_makers.FullName = "value"
SELECT model_list.Model , cars_data.Weight FROM car_names JOIN car_makers WHERE car_makers.FullName = "value" EXCEPT SELECT model_list.Model , cars_data.Weight FROM car_names JOIN model_list JOIN car_makers WHERE car_makers.FullName = "value"
SELECT model_list.Model FROM model_list JOIN car_makers WHERE car_makers.FullName = "value" EXCEPT SELECT model_list.Model FROM model_list JOIN car_names JOIN cars_data WHERE cars_data.Weight < "value"

SELECT countries.CountryName FROM countries
SELECT countries.CountryName FROM countries JOIN car_makers
SELECT countries.CountryName FROM countries EXCEPT SELECT countries.CountryName FROM countries JOIN car_makers

SELECT car_makers.Id , car_makers.FullName , model_list.Model , car_names.Make FROM model_list JOIN car_names JOIN car_makers
SELECT car_makers.Id , car_makers.Maker , COUNT(*) FROM model_list JOIN car_makers GROUP BY car_makers.Id
SELECT car_makers.Id , car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING COUNT(*) >= "value"
SELECT car_makers.Id , car_makers.Maker FROM car_makers JOIN model_list GROUP BY car_makers.Id HAVING COUNT(*) >= "value"

SELECT COUNT(*) FROM matches
SELECT MAX(matches.minutes) FROM matches
SELECT AVG(matches.minutes) FROM matches
SELECT matches.loser_age FROM matches

SELECT COUNT(matches.tourney_name) FROM matches
SELECT matches.tourney_name FROM matches GROUP BY matches.tourney_name HAVING COUNT(*) > "value"
SELECT matches.tourney_name FROM matches GROUP BY matches.tourney_name HAVING COUNT(*) > "value"

SELECT COUNT(matches.winner_name) FROM matches WHERE matches.year = "value"
SELECT COUNT(matches.winner_name) FROM matches WHERE matches.year = "value"
SELECT matches.winner_name FROM matches WHERE matches.year = "value" INTERSECT SELECT matches.winner_name FROM matches WHERE matches.year = "value"

SELECT COUNT(*) FROM matches
SELECT COUNT(*) FROM matches WHERE matches.loser_hand = "value"
SELECT COUNT(*) FROM matches WHERE matches.loser_hand = "value" OR matches.year = "value"

SELECT COUNT(*) FROM players
SELECT players.last_name , players.birth_date FROM players JOIN matches WHERE matches.tourney_name = "value"
SELECT players.first_name , players.country_code FROM players JOIN matches WHERE matches.tourney_name = "value"
SELECT players.first_name , players.country_code FROM players JOIN matches WHERE matches.tourney_name = "value" INTERSECT SELECT players.first_name , players.country_code FROM players JOIN matches WHERE matches.tourney_name = "value"

SELECT players.birth_date FROM players ORDER BY players.birth_date DESC LIMIT 1
SELECT players.player_id , players.last_name FROM players ORDER BY players.birth_date DESC LIMIT 1
SELECT players.first_name , players.country_code FROM players ORDER BY players.birth_date DESC LIMIT 1

SELECT COUNT(*) FROM players WHERE players.hand = "value"
SELECT COUNT(*) FROM players WHERE players.hand = "value"
SELECT players.country_code , players.birth_date FROM players WHERE players.hand = "value"
SELECT players.first_name , players.last_name FROM players WHERE players.hand = "value" ORDER BY players.birth_date ASC

SELECT COUNT(*) FROM players
SELECT rankings.tours FROM rankings ORDER BY rankings.tours ASC LIMIT 1
SELECT rankings.tours FROM rankings ORDER BY rankings.tours DESC LIMIT 1
SELECT players.first_name , players.country_code FROM players JOIN rankings ORDER BY rankings.tours DESC LIMIT 1

SELECT COUNT(*) FROM matches
SELECT matches.surface FROM matches GROUP BY matches.surface ORDER BY COUNT(*) DESC LIMIT 1
SELECT matches.year FROM matches GROUP BY matches.year ORDER BY COUNT(*) DESC LIMIT 1

SELECT matches.loser_name FROM matches GROUP BY matches.loser_name ORDER BY COUNT(*) DESC LIMIT 1
SELECT matches.loser_name , matches.loser_rank_points FROM matches GROUP BY matches.loser_name , matches.loser_rank_points ORDER BY COUNT(*) DESC LIMIT 1
SELECT matches.loser_name , matches.loser_rank_points FROM matches GROUP BY matches.loser_name , matches.loser_rank_points ORDER BY COUNT(*) DESC LIMIT 1

SELECT matches.loser_name FROM matches ORDER BY matches.loser_rank_points DESC LIMIT 1
SELECT matches.loser_name FROM matches WHERE matches.tourney_name = "value" ORDER BY matches.loser_rank_points DESC LIMIT 1
SELECT matches.winner_name FROM matches WHERE matches.tourney_name = "value" ORDER BY matches.loser_rank_points DESC LIMIT 1

SELECT MIN(matches.minutes) FROM matches
SELECT MAX(matches.minutes) FROM matches
SELECT matches.winner_name , matches.loser_name FROM matches ORDER BY matches.minutes DESC LIMIT 1

SELECT players.birth_date FROM players
SELECT rankings.tours , players.first_name FROM players JOIN rankings
SELECT AVG(rankings.ranking) FROM rankings

SELECT rankings.tours FROM rankings
SELECT AVG(rankings.ranking_points) , players.first_name FROM rankings JOIN players
SELECT SUM(rankings.ranking_points) FROM rankings

SELECT COUNT(*) , players.country_code FROM players GROUP BY players.country_code
SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY COUNT(*) ASC LIMIT 1
SELECT players.country_code FROM players GROUP BY players.country_code ORDER BY COUNT(*) DESC LIMIT 1

SELECT players.hand , COUNT(*) FROM players GROUP BY players.hand
SELECT players.country_code , players.hand , COUNT(*) FROM players GROUP BY players.country_code
SELECT players.hand , COUNT(*) FROM players GROUP BY players.country_code HAVING COUNT(*) > "value"
SELECT players.country_code FROM players GROUP BY players.country_code HAVING COUNT(*) > "value"

SELECT matches.loser_name FROM matches ORDER BY matches.loser_age DESC LIMIT 1
SELECT matches.loser_name FROM matches ORDER BY matches.loser_age DESC LIMIT 1
SELECT matches.loser_name , matches.winner_rank FROM matches ORDER BY matches.loser_age ASC LIMIT 1

SELECT COUNT(matches.loser_name) FROM matches WHERE matches.tourney_name = "value"
SELECT COUNT(matches.winner_name) FROM matches WHERE matches.tourney_name = "value"
SELECT COUNT(matches.winner_name) FROM players JOIN matches WHERE players.hand = "value" AND matches.tourney_name = "value"

SELECT * FROM conductor
SELECT COUNT(*) FROM conductor

SELECT conductor.Name FROM conductor
SELECT conductor.Age FROM conductor
SELECT conductor.Name FROM conductor ORDER BY conductor.Age ASC

SELECT conductor.Name FROM conductor
SELECT conductor.Name FROM conductor WHERE conductor.Nationality != "value"

SELECT * FROM orchestra
SELECT orchestra.Year_of_Founded FROM orchestra
SELECT orchestra.Record_Company FROM orchestra ORDER BY orchestra.Year_of_Founded DESC

SELECT show.Attendance FROM show
SELECT AVG(show.Attendance) FROM show

SELECT performance.Share FROM performance
SELECT performance.Share FROM performance WHERE performance.Type != "value"
SELECT MAX(performance.Share) , MIN(performance.Share) FROM performance WHERE performance.Type != "value"

SELECT conductor.Nationality FROM conductor
SELECT COUNT(conductor.Nationality) FROM conductor

SELECT conductor.Name FROM conductor
SELECT conductor.Year_of_Work FROM conductor
SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work DESC

SELECT conductor.Name FROM conductor
SELECT conductor.Year_of_Work FROM conductor
SELECT conductor.Name FROM conductor ORDER BY conductor.Year_of_Work DESC LIMIT 1

SELECT conductor.Name FROM conductor
SELECT conductor.Name , orchestra.Orchestra FROM conductor JOIN orchestra

SELECT conductor.Name FROM conductor
SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY orchestra.Conductor_ID HAVING COUNT(*) > "value"

SELECT conductor.Name FROM conductor
SELECT conductor.Name FROM conductor JOIN orchestra GROUP BY orchestra.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1

SELECT conductor.Name FROM conductor
SELECT conductor.Name FROM conductor JOIN orchestra WHERE orchestra.Year_of_Founded > "value"

SELECT orchestra.Record_Company FROM orchestra EXCEPT SELECT orchestra.Record_Company FROM orchestra
SELECT orchestra.Record_Company , COUNT(*) FROM orchestra GROUP BY orchestra.Record_Company

SELECT orchestra.Major_Record_Format FROM orchestra
SELECT orchestra.Major_Record_Format FROM orchestra GROUP BY orchestra.Major_Record_Format ORDER BY COUNT(*) ASC

SELECT * FROM orchestra
SELECT orchestra.Record_Company FROM orchestra GROUP BY orchestra.Record_Company ORDER BY COUNT(*) DESC LIMIT 1

SELECT orchestra.Orchestra FROM orchestra
SELECT orchestra.Orchestra FROM orchestra WHERE orchestra.Orchestra_ID NOT IN ( SELECT performance.Orchestra_ID FROM performance )

SELECT orchestra.Record_Company FROM orchestra
SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < "value" INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded > "value"
SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded > "value" INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < "value"
SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded < "value" INTERSECT SELECT orchestra.Record_Company FROM orchestra WHERE orchestra.Year_of_Founded > "value"

SELECT * FROM orchestra WHERE orchestra.Major_Record_Format = "value" OR orchestra.Major_Record_Format = "value"
SELECT COUNT(*) FROM orchestra WHERE orchestra.Major_Record_Format = "value" OR orchestra.Major_Record_Format = "value"

SELECT * FROM Documents
SELECT Documents.Document_ID FROM Documents
SELECT Documents.Document_ID , Documents.Document_Name , Documents.Document_Description FROM Documents

SELECT Documents.Document_Name FROM Documents
SELECT Documents.Document_Name , Documents.Document_Description FROM Documents
SELECT Documents.Document_Name , Documents.Document_Description FROM Documents WHERE Documents.Document_Description LIKE "value"
SELECT Documents.Document_Name , Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE "value"

SELECT Documents.Document_Name FROM Documents
SELECT Documents.Document_ID FROM Documents WHERE Documents.Document_Name = "value"
SELECT Documents.Document_ID , Documents.Template_ID , Documents.Document_Description FROM Documents WHERE Documents.Document_Name = "value"

SELECT Documents.Template_ID FROM Documents
SELECT Documents.Template_ID FROM Documents
SELECT COUNT(Documents.Template_ID) FROM Documents

SELECT Documents.Document_ID FROM Documents
SELECT Documents.Document_ID , Documents.Template_ID , Templates.Template_Type_Code FROM Documents JOIN Templates
SELECT Documents.Document_ID , Documents.Template_ID , Templates.Template_Type_Code FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = "value"
SELECT COUNT(*) FROM Templates JOIN Documents WHERE Templates.Template_Type_Code = "value"

SELECT Documents.Template_ID FROM Documents
SELECT Documents.Template_ID , COUNT(*) FROM Documents GROUP BY Documents.Template_ID

SELECT Documents.Template_ID FROM Documents
SELECT Documents.Template_ID , Templates.Template_Type_Code FROM Documents JOIN Templates
SELECT Documents.Template_ID , Templates.Template_Type_Code , COUNT(*) FROM Templates JOIN Documents GROUP BY Documents.Template_ID
SELECT Documents.Template_ID , Templates.Template_Type_Code FROM Templates JOIN Documents GROUP BY Documents.Template_ID ORDER BY COUNT(*) DESC LIMIT 1

SELECT Documents.Template_ID FROM Documents
SELECT Documents.Template_ID , COUNT(*) FROM Documents GROUP BY Documents.Template_ID
SELECT Documents.Template_ID FROM Documents GROUP BY Documents.Template_ID HAVING COUNT(*) > "value"

SELECT Documents.Template_ID FROM Documents
SELECT Templates.Template_ID FROM Templates
SELECT Templates.Template_ID FROM Templates WHERE Templates.Template_ID NOT IN ( SELECT Documents.Template_ID FROM Documents )

SELECT * FROM Templates
SELECT COUNT(*) FROM Templates

SELECT Documents.Template_ID FROM Documents
SELECT Templates.Template_ID , Templates.Version_Number , Templates.Template_Type_Code FROM Templates

SELECT Templates.Template_Type_Code FROM Templates
SELECT Templates.Template_Type_Code FROM Templates

SELECT Templates.Template_ID FROM Templates
SELECT Templates.Template_ID FROM Templates WHERE Templates.Template_Type_Code = "value" OR Templates.Template_Type_Code = "value"

SELECT Templates.Template_Type_Code FROM Templates
SELECT COUNT(*) FROM Templates WHERE Templates.Template_Type_Code = "value"

SELECT Templates.Version_Number FROM Templates
SELECT Templates.Version_Number FROM Templates WHERE Templates.Version_Number > "value"
SELECT Templates.Template_Type_Code , Templates.Version_Number FROM Templates WHERE Templates.Version_Number > "value"

SELECT Templates.Template_Type_Code FROM Templates
SELECT Templates.Template_Type_Code , COUNT(*) FROM Templates GROUP BY Templates.Template_Type_Code

SELECT Templates.Template_Type_Code FROM Templates
SELECT Templates.Template_Type_Code , COUNT(*) FROM Templates GROUP BY Templates.Template_Type_Code
SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code ORDER BY COUNT(*) DESC LIMIT 1

SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types
SELECT Templates.Template_Type_Code , COUNT(*) FROM Templates GROUP BY Templates.Template_Type_Code
SELECT Templates.Template_Type_Code FROM Templates GROUP BY Templates.Template_Type_Code HAVING COUNT(*) < "value"

SELECT Templates.Version_Number FROM Templates
SELECT MIN(Templates.Version_Number) FROM Templates
SELECT MIN(Templates.Version_Number) , Templates.Template_Type_Code FROM Templates

SELECT Templates.Template_Type_Code FROM Templates
SELECT Templates.Template_Type_Code , Documents.Document_Name FROM Templates JOIN Documents
SELECT Templates.Template_Type_Code FROM Templates JOIN Documents WHERE Documents.Document_Name = "value"

SELECT Documents.Document_Name FROM Documents
SELECT Documents.Document_Name , Templates.Template_Type_Code FROM Documents JOIN Templates
SELECT Documents.Document_Name FROM Documents JOIN Templates WHERE Templates.Template_Type_Code = "value"

SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types
SELECT Templates.Template_Type_Code , Documents.Document_ID FROM Templates JOIN Documents
SELECT Templates.Template_Type_Code , COUNT(*) FROM Templates JOIN Documents GROUP BY Templates.Template_Type_Code

SELECT Templates.Template_Type_Code FROM Templates
SELECT Templates.Template_Type_Code , COUNT(*) FROM Templates JOIN Documents GROUP BY Documents.Template_ID
SELECT Templates.Template_Type_Code FROM Templates JOIN Documents GROUP BY Documents.Template_ID ORDER BY COUNT(*) DESC
SELECT Templates.Template_Type_Code FROM Templates JOIN Documents GROUP BY Documents.Template_ID ORDER BY COUNT(*) DESC LIMIT 1

SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types
SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types JOIN Templates
SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Code NOT IN ( SELECT Templates.Template_Type_Code FROM Templates )

SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types
SELECT Ref_Template_Types.Template_Type_Code , Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types

SELECT Ref_Template_Types.Template_Type_Code , Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types
SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Code = "value"

SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types
SELECT Ref_Template_Types.Template_Type_Code , Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types
SELECT Ref_Template_Types.Template_Type_Code FROM Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = "value"

SELECT Documents.Template_ID FROM Documents
SELECT Documents.Template_ID , Templates.Template_Type_Code FROM Templates JOIN Documents
SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates
SELECT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates

SELECT Templates.Template_ID FROM Templates
SELECT Templates.Template_ID , Ref_Template_Types.Template_Type_Description FROM Templates JOIN Ref_Template_Types
SELECT Templates.Template_ID FROM Templates JOIN Ref_Template_Types WHERE Ref_Template_Types.Template_Type_Description = "value"

SELECT * FROM Paragraphs
SELECT COUNT(*) FROM Paragraphs

SELECT Paragraphs.Paragraph_ID FROM Paragraphs
SELECT Paragraphs.Paragraph_ID , Documents.Document_Name FROM Paragraphs JOIN Documents
SELECT Paragraphs.Paragraph_ID FROM Paragraphs JOIN Documents WHERE Documents.Document_Name = "value"
SELECT COUNT(*) FROM Paragraphs JOIN Documents WHERE Documents.Document_Name = "value"

SELECT Paragraphs.Paragraph_Text FROM Paragraphs
SELECT Paragraphs.Paragraph_Text , Paragraphs.Other_Details FROM Paragraphs
SELECT Paragraphs.Other_Details FROM Paragraphs WHERE Paragraphs.Paragraph_Text LIKE "value"

SELECT Paragraphs.Paragraph_ID , Paragraphs.Paragraph_Text FROM Paragraphs
SELECT Paragraphs.Paragraph_ID , Documents.Document_Name , Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents
SELECT Paragraphs.Paragraph_ID , Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents WHERE Documents.Document_Name = "value"

SELECT Paragraphs.Paragraph_Text FROM Paragraphs
SELECT Documents.Document_Name , Paragraphs.Paragraph_Text FROM Paragraphs JOIN Documents
SELECT Paragraphs.Paragraph_Text FROM Documents JOIN Paragraphs WHERE Documents.Document_Name = "value"

SELECT Paragraphs.Document_ID FROM Paragraphs
SELECT Paragraphs.Document_ID , COUNT(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID
SELECT Paragraphs.Document_ID , COUNT(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY COUNT(*) ASC

SELECT Documents.Document_ID , Documents.Document_Name FROM Documents
SELECT Documents.Document_ID , Documents.Document_Name , COUNT(*) FROM Paragraphs JOIN Documents GROUP BY Documents.Document_ID

SELECT Paragraphs.Document_ID FROM Paragraphs
SELECT Paragraphs.Document_ID , COUNT(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID
SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING COUNT(*) >= "value"

SELECT Documents.Document_ID , Documents.Document_Name FROM Documents
SELECT Documents.Document_ID , Paragraphs.Paragraph_ID , Documents.Document_Name FROM Documents JOIN Paragraphs
SELECT Documents.Document_ID , Documents.Document_Name , COUNT(*) FROM Paragraphs JOIN Documents GROUP BY Documents.Document_ID
SELECT Documents.Document_ID , Documents.Document_Name FROM Paragraphs JOIN Documents GROUP BY Documents.Document_ID ORDER BY COUNT(*) DESC LIMIT 1

SELECT Paragraphs.Document_ID FROM Paragraphs
SELECT Paragraphs.Document_ID , COUNT(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID
SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY COUNT(*) ASC
SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID ORDER BY COUNT(*) ASC LIMIT 1

SELECT Paragraphs.Document_ID FROM Paragraphs
SELECT Paragraphs.Document_ID , COUNT(*) FROM Paragraphs GROUP BY Paragraphs.Document_ID
SELECT Paragraphs.Document_ID FROM Paragraphs GROUP BY Paragraphs.Document_ID HAVING COUNT(*) BETWEEN "value" AND "value"

SELECT * FROM singer
SELECT COUNT(*) FROM singer

SELECT singer.Name FROM singer
SELECT singer.Name , singer.Country , singer.Age FROM singer
SELECT singer.Name , singer.Country , singer.Age FROM singer ORDER BY singer.Age DESC

SELECT singer.Age FROM singer
SELECT singer.Age FROM singer WHERE singer.Country = "value"
SELECT AVG(singer.Age) , MIN(singer.Age) , MAX(singer.Age) FROM singer WHERE singer.Country = "value"

SELECT singer.Song_Name FROM singer
SELECT singer.Song_Name , singer.Song_release_year FROM singer
SELECT singer.Song_Name , singer.Song_release_year FROM singer ORDER BY singer.Age ASC
SELECT singer.Song_Name , singer.Song_release_year FROM singer ORDER BY singer.Age DESC LIMIT 1

SELECT singer.Country FROM singer
SELECT singer.Country FROM singer WHERE singer.Age > "value"
SELECT singer.Country FROM singer WHERE singer.Age > "value"

SELECT singer.Country FROM singer
SELECT singer.Country , COUNT(*) FROM singer GROUP BY singer.Country

SELECT AVG(singer.Age) FROM singer
SELECT singer.Song_Name FROM singer WHERE singer.Age > ( SELECT AVG(singer.Age) FROM singer )

SELECT stadium.Name FROM stadium
SELECT stadium.Name FROM stadium WHERE stadium.Capacity BETWEEN "value" AND "value"
SELECT stadium.Name , stadium.Location FROM stadium WHERE stadium.Capacity BETWEEN "value" AND "value"

SELECT stadium.Capacity FROM stadium
SELECT AVG(stadium.Average) FROM stadium
SELECT AVG(stadium.Average) , MAX(stadium.Capacity) FROM stadium

SELECT stadium.Name , stadium.Capacity FROM stadium
SELECT stadium.Name , stadium.Capacity FROM stadium ORDER BY stadium.Average DESC
SELECT stadium.Name , stadium.Capacity FROM stadium ORDER BY stadium.Average DESC LIMIT 1

SELECT * FROM concert WHERE concert.Year = "value"
SELECT * FROM concert WHERE concert.Year = "value" OR concert.Year = "value"
SELECT COUNT(*) FROM concert WHERE concert.Year = "value" OR concert.Year = "value"

SELECT stadium.Name FROM stadium
SELECT stadium.Name , COUNT(*) FROM concert JOIN stadium GROUP BY concert.Stadium_ID

SELECT stadium.Name , stadium.Capacity FROM stadium
SELECT stadium.Name , stadium.Capacity FROM concert JOIN stadium WHERE concert.Year <= "value" GROUP BY stadium.Name ORDER BY COUNT(*) DESC
SELECT stadium.Name , stadium.Capacity FROM concert JOIN stadium WHERE concert.Year >= "value" GROUP BY stadium.Name ORDER BY COUNT(*) DESC LIMIT 1

SELECT concert.Year FROM concert
SELECT concert.Year FROM concert GROUP BY concert.Year ORDER BY COUNT(*) DESC
SELECT concert.Year FROM concert GROUP BY concert.Year ORDER BY COUNT(*) DESC LIMIT 1

SELECT concert.Stadium_ID FROM concert
SELECT stadium.Name FROM stadium WHERE stadium.Stadium_ID NOT IN ( SELECT concert.Stadium_ID FROM concert )

SELECT singer.Country FROM singer
SELECT singer.Country FROM singer WHERE singer.Age > "value"
SELECT singer.Country FROM singer WHERE singer.Age < "value"
SELECT singer.Country FROM singer WHERE singer.Age > "value" INTERSECT SELECT singer.Country FROM singer WHERE singer.Age < "value"

SELECT stadium.Name FROM stadium JOIN concert WHERE concert.Year = "value"
SELECT stadium.Name FROM stadium EXCEPT SELECT stadium.Name FROM stadium JOIN concert WHERE concert.Year = "value"

SELECT concert.concert_Name , concert.Theme FROM concert
SELECT concert.concert_Name , concert.Theme , COUNT(*) FROM singer_in_concert JOIN concert GROUP BY concert.concert_ID

SELECT singer.Name FROM singer
SELECT singer.Name , COUNT(*) FROM singer_in_concert JOIN singer GROUP BY singer_in_concert.Singer_ID

SELECT singer.Name FROM singer
SELECT singer.Name FROM singer_in_concert JOIN singer JOIN concert WHERE concert.Year = "value"

SELECT singer.Name FROM singer
SELECT singer.Name FROM singer WHERE singer.Song_Name LIKE "value"
SELECT singer.Name , singer.Country FROM singer WHERE singer.Song_Name LIKE "value"

SELECT stadium.Name , stadium.Location FROM stadium
SELECT stadium.Name , stadium.Location FROM concert JOIN stadium WHERE concert.Year = "value"
SELECT stadium.Name , stadium.Location FROM concert JOIN stadium WHERE concert.Year = "value" INTERSECT SELECT stadium.Name , stadium.Location FROM concert JOIN stadium WHERE concert.Year = "value"

SELECT singer.Name , singer.Birth_Year FROM singer
SELECT singer.Name , singer.Birth_Year FROM singer WHERE singer.Birth_Year = "value"
SELECT singer.Name FROM singer WHERE singer.Birth_Year = "value" OR singer.Birth_Year = "value"

SELECT singer.Name , singer.Net_Worth_Millions FROM singer
SELECT singer.Name , singer.Net_Worth_Millions FROM singer ORDER BY singer.Net_Worth_Millions ASC
SELECT singer.Name FROM singer ORDER BY singer.Net_Worth_Millions DESC LIMIT 1

SELECT singer.Name , singer.Citizenship FROM singer
SELECT singer.Citizenship , COUNT(*) FROM singer GROUP BY singer.Citizenship
SELECT singer.Citizenship , COUNT(*) FROM singer GROUP BY singer.Citizenship ORDER BY COUNT(*) ASC
SELECT singer.Citizenship FROM singer GROUP BY singer.Citizenship HAVING COUNT(*) = "value" ORDER BY COUNT(*) ASC

SELECT singer.Name , song.Title FROM singer JOIN song
SELECT singer.Name , song.Title FROM singer JOIN song WHERE song.Sales > "value"
SELECT singer.Name FROM singer JOIN song WHERE song.Sales > "value"

SELECT singer.Name , COUNT(*) FROM singer JOIN song GROUP BY song.Singer_ID
SELECT singer.Name FROM singer JOIN song GROUP BY song.Singer_ID HAVING COUNT(*) > "value"

SELECT song.Title , song.Sales FROM song
SELECT singer.Name , SUM(song.Sales) FROM singer JOIN song GROUP BY singer.Name

SELECT song.Singer_ID FROM song
SELECT singer.Name FROM singer WHERE singer.Singer_ID NOT IN ( SELECT song.Singer_ID FROM song )

SELECT * FROM employee WHERE employee.Age < "value"
SELECT employee.City FROM employee WHERE employee.Age < "value"
SELECT employee.City FROM employee GROUP BY employee.City HAVING COUNT(*) > "value"

SELECT * FROM shop
SELECT SUM(shop.Number_products) FROM shop
SELECT shop.Name FROM shop ORDER BY shop.Number_products DESC LIMIT 1
SELECT shop.Manager_name , shop.District FROM shop ORDER BY shop.Number_products DESC LIMIT 1

SELECT AVG(shop.Number_products) FROM shop
SELECT MIN(shop.Number_products) , MAX(shop.Number_products) FROM shop

SELECT shop.Name , shop.Number_products FROM shop
SELECT AVG(shop.Number_products) FROM shop
SELECT shop.Name FROM shop WHERE shop.Number_products < ( SELECT AVG(shop.Number_products) FROM shop )
SELECT shop.Name FROM shop WHERE shop.Number_products > ( SELECT AVG(shop.Number_products) FROM shop )

SELECT COUNT(*) FROM evaluation
SELECT evaluation.Year_awarded FROM evaluation
SELECT employee.Name FROM evaluation JOIN employee GROUP BY evaluation.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1

SELECT employee.Name FROM employee JOIN evaluation
SELECT employee.Name FROM employee JOIN evaluation GROUP BY employee.Name ORDER BY COUNT(*) DESC LIMIT 1
SELECT employee.Name FROM employee JOIN evaluation ORDER BY evaluation.Bonus DESC LIMIT 1

SELECT COUNT(evaluation.Employee_ID) FROM evaluation
SELECT employee.Name FROM employee JOIN evaluation
SELECT employee.Name FROM employee EXCEPT SELECT employee.Name FROM employee JOIN evaluation WHERE evaluation.Year_awarded = "value"

SELECT COUNT(*) FROM hiring JOIN shop
SELECT shop.Name FROM hiring JOIN shop
SELECT shop.Name FROM shop JOIN hiring GROUP BY hiring.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1

SELECT * FROM hiring
SELECT shop.Name FROM shop WHERE shop.Shop_ID NOT IN ( SELECT hiring.Shop_ID FROM hiring )

SELECT COUNT(*) FROM hiring
SELECT shop.Name , COUNT(*) FROM hiring JOIN shop GROUP BY hiring.Shop_ID

SELECT * FROM visitor
SELECT * FROM visitor ORDER BY visitor.Level_of_membership DESC
SELECT visitor.Name FROM visitor ORDER BY visitor.Level_of_membership DESC
SELECT visitor.Name FROM visitor WHERE visitor.Level_of_membership <= "value"

SELECT COUNT(*) FROM visitor WHERE visitor.Level_of_membership > "value"
SELECT visitor.Name , visitor.Level_of_membership FROM visitor WHERE visitor.Level_of_membership > "value"
SELECT visitor.Name , visitor.Level_of_membership FROM visitor WHERE visitor.Level_of_membership > "value" ORDER BY visitor.Age DESC

SELECT COUNT(*) FROM museum
SELECT AVG(museum.Num_of_Staff) FROM museum
SELECT museum.Name FROM museum ORDER BY museum.Num_of_Staff DESC LIMIT 1
SELECT museum.Museum_ID FROM museum ORDER BY museum.Num_of_Staff DESC LIMIT 1

SELECT museum.Name FROM museum WHERE museum.Open_Year < "value"
SELECT museum.Name FROM museum WHERE museum.Open_Year > "value"
SELECT MIN(museum.Num_of_Staff) FROM museum WHERE museum.Open_Year > "value"
SELECT museum.Name FROM museum WHERE museum.Num_of_Staff > ( SELECT MIN(museum.Num_of_Staff) FROM museum WHERE museum.Open_Year > "value" )

SELECT visitor.Name FROM visitor JOIN visit INTERSECT SELECT visitor.Name FROM visitor JOIN visit
SELECT visitor.Name FROM visitor JOIN visit GROUP BY visitor.Name HAVING COUNT(*) > "value" INTERSECT SELECT visitor.Name FROM visitor JOIN visit GROUP BY visitor.Name HAVING COUNT(*) > "value"
SELECT visitor.ID , visitor.Name , visitor.Age FROM visitor JOIN visit GROUP BY visitor.ID HAVING COUNT(*) > "value" INTERSECT SELECT visitor.ID , visitor.Name , visitor.Age FROM visitor JOIN visit GROUP BY visitor.ID HAVING COUNT(*) > "value"

SELECT SUM(visit.Total_spent) FROM visit
SELECT visitor.Name FROM visitor JOIN visit GROUP BY visitor.Name ORDER BY SUM(visit.Total_spent) DESC LIMIT 1
SELECT visitor.ID , visitor.Level_of_membership FROM visitor JOIN visit GROUP BY visitor.ID ORDER BY SUM(visit.Total_spent) DESC LIMIT 1

SELECT museum.Museum_ID , museum.Name FROM museum
SELECT museum.Museum_ID , museum.Name , COUNT(visit.Num_of_Ticket) FROM visit JOIN museum GROUP BY visit.Museum_ID
SELECT museum.Museum_ID , museum.Name FROM museum JOIN visit GROUP BY visit.Museum_ID ORDER BY COUNT(*) DESC LIMIT 1

SELECT COUNT(*) FROM museum
SELECT COUNT(*) FROM museum WHERE museum.Museum_ID NOT IN ( SELECT visit.Museum_ID FROM visit )
SELECT museum.Name FROM museum WHERE museum.Museum_ID NOT IN ( SELECT visit.Museum_ID FROM visit )

SELECT SUM(visit.Num_of_Ticket) FROM visit
SELECT visit.visitor_ID FROM visit GROUP BY visit.visitor_ID ORDER BY SUM(visit.Num_of_Ticket) DESC LIMIT 1
SELECT visitor.Name , visitor.Age FROM visitor JOIN visit GROUP BY visit.visitor_ID ORDER BY SUM(visit.Num_of_Ticket) DESC LIMIT 1

SELECT SUM(visit.Total_spent) FROM visit
SELECT visit.Total_spent FROM visit ORDER BY visit.Num_of_Ticket DESC LIMIT 1
SELECT AVG(visit.Num_of_Ticket) , MAX(visit.Num_of_Ticket) FROM visit

SELECT visitor.Level_of_membership FROM visitor ORDER BY visitor.Level_of_membership ASC LIMIT 1
SELECT COUNT(*) FROM visitor WHERE visitor.Level_of_membership = "value"
SELECT visit.Num_of_Ticket FROM visitor JOIN visit WHERE visitor.Level_of_membership = "value"
SELECT SUM(visit.Total_spent) FROM visit JOIN visitor WHERE visitor.Level_of_membership = "value"

SELECT museum.Name FROM museum WHERE museum.Open_Year < "value"
SELECT museum.Name FROM museum WHERE museum.Open_Year > "value"
SELECT visitor.Name FROM visit JOIN visitor JOIN museum WHERE museum.Open_Year > "value" INTERSECT SELECT visitor.Name FROM visit JOIN visitor JOIN museum WHERE museum.Open_Year < "value"

SELECT museum.Name FROM museum WHERE museum.Open_Year > "value"
SELECT COUNT(*) FROM museum JOIN visit WHERE museum.Open_Year > "value"
SELECT COUNT(*) FROM visitor WHERE visitor.ID NOT IN ( SELECT visit.visitor_ID FROM visit JOIN museum WHERE museum.Open_Year > "value" )

SELECT COUNT(*) FROM Highschooler
SELECT COUNT(*) FROM Highschooler WHERE Highschooler.grade = "value" OR Highschooler.grade = "value"
SELECT COUNT(*) FROM Highschooler WHERE Highschooler.grade = "value" OR Highschooler.grade = "value"

SELECT COUNT(Highschooler.grade) FROM Highschooler
SELECT Highschooler.grade FROM Highschooler
SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade ORDER BY COUNT(*) ASC LIMIT 1
SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade ORDER BY COUNT(*) DESC LIMIT 1

SELECT COUNT(*) FROM Highschooler
SELECT Highschooler.grade , COUNT(*) FROM Highschooler GROUP BY Highschooler.grade
SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING COUNT(*) >= "value"
SELECT Highschooler.grade FROM Highschooler GROUP BY Highschooler.grade HAVING COUNT(*) >= "value"

SELECT Highschooler.name FROM Highschooler
SELECT Highschooler.name , Highschooler.name FROM Highschooler JOIN Friend
SELECT Highschooler.name , COUNT(*) FROM Highschooler JOIN Friend GROUP BY Friend.student_id

SELECT Highschooler.name FROM Highschooler
SELECT Highschooler.name , COUNT(*) FROM Highschooler JOIN Friend GROUP BY Friend.student_id
SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id ORDER BY COUNT(*) ASC LIMIT 1
SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id ORDER BY COUNT(*) DESC LIMIT 1

SELECT COUNT(*) FROM ( SELECT COUNT(*) FROM Friend JOIN Highschooler GROUP BY Friend.student_id HAVING COUNT(*) > "value" )
SELECT COUNT(*) FROM Friend JOIN Highschooler GROUP BY Friend.student_id HAVING COUNT(*) >= "value"
SELECT Highschooler.name FROM Friend JOIN Highschooler GROUP BY Friend.student_id HAVING COUNT(*) >= "value"

SELECT * FROM Highschooler WHERE Highschooler.name = "value"
SELECT COUNT(*) FROM Friend JOIN Highschooler WHERE Highschooler.name = "value"
SELECT Highschooler.name FROM Highschooler WHERE Highschooler.name = "value"

SELECT * FROM Highschooler WHERE Highschooler.name = "value"
SELECT Highschooler.name FROM Highschooler JOIN Likes JOIN Highschooler WHERE Highschooler.name = "value"
SELECT Highschooler.name FROM Highschooler JOIN Friend JOIN Highschooler WHERE Highschooler.name = "value"
SELECT COUNT(*) FROM Highschooler JOIN Friend WHERE Highschooler.name = "value"

SELECT Highschooler.ID FROM Highschooler
SELECT Friend.student_id , COUNT(*) FROM Highschooler JOIN Friend GROUP BY Friend.student_id
SELECT Friend.student_id FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING COUNT(*) >= "value"
SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.ID NOT IN ( SELECT Friend.student_id FROM Friend )

SELECT Highschooler.name FROM Highschooler
SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING COUNT(*) >= "value"
SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING COUNT(*) >= "value"
SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING COUNT(*) < "value"

SELECT Friend.student_id FROM Friend
SELECT Likes.student_id , Friend.student_id , Friend.student_id FROM Highschooler JOIN Likes JOIN Friend
SELECT Likes.student_id FROM Highschooler JOIN Likes
SELECT Highschooler.ID FROM Highschooler JOIN Likes

SELECT COUNT(*) FROM Highschooler WHERE Highschooler.ID IN ( SELECT Likes.student_id FROM Likes )
SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID NOT IN ( SELECT Likes.student_id FROM Likes )
SELECT COUNT(*) FROM Highschooler WHERE Highschooler.ID NOT IN ( SELECT Likes.student_id FROM Likes )
SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID NOT IN ( SELECT Likes.student_id FROM Likes )

SELECT Highschooler.name FROM Highschooler EXCEPT SELECT Highschooler.name FROM Highschooler JOIN Likes
SELECT Highschooler.name FROM Highschooler EXCEPT SELECT Highschooler.name FROM Highschooler JOIN Likes
SELECT Highschooler.name , COUNT(*) FROM Highschooler EXCEPT SELECT Highschooler.name FROM Highschooler JOIN Likes

SELECT COUNT(*) FROM Highschooler WHERE Highschooler.ID NOT IN ( SELECT Likes.student_id FROM Likes )
SELECT Highschooler.name FROM Highschooler WHERE Highschooler.ID NOT IN ( SELECT Likes.student_id FROM Likes )
SELECT COUNT(*) FROM Likes JOIN Highschooler GROUP BY Likes.student_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT Highschooler.name FROM Likes JOIN Highschooler GROUP BY Likes.student_id ORDER BY COUNT(*) DESC LIMIT 1

SELECT Highschooler.name FROM Highschooler
SELECT Highschooler.name FROM Highschooler JOIN Likes
SELECT Highschooler.name FROM Highschooler JOIN Likes GROUP BY Likes.student_id HAVING COUNT(*) >= "value"

SELECT Highschooler.name FROM Highschooler JOIN Friend
SELECT Highschooler.name FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING COUNT(*) >= "value"
SELECT Highschooler.name , Highschooler.grade FROM Highschooler JOIN Friend GROUP BY Friend.student_id HAVING COUNT(*) >= "value"
SELECT Highschooler.name FROM Highschooler JOIN Friend WHERE Highschooler.grade > "value" GROUP BY Friend.student_id HAVING COUNT(*) >= "value"

SELECT Highschooler.grade FROM Highschooler WHERE Highschooler.name = "value"
SELECT COUNT(*) FROM Highschooler JOIN Likes WHERE Highschooler.name = "value"
SELECT Highschooler.name FROM Highschooler JOIN Likes JOIN Highschooler WHERE Highschooler.name = "value"
SELECT COUNT(*) FROM Highschooler JOIN Likes WHERE Highschooler.name = "value"

SELECT Highschooler.ID , Highschooler.grade FROM Highschooler
SELECT AVG(Highschooler.grade) FROM Highschooler
SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN ( SELECT Friend.student_id FROM Friend )
SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN ( SELECT Friend.student_id FROM Friend )

SELECT * FROM teacher
SELECT COUNT(*) FROM teacher

SELECT teacher.Name FROM teacher
SELECT teacher.Name FROM teacher ORDER BY teacher.Age ASC

SELECT teacher.Age FROM teacher
SELECT teacher.Age , teacher.Hometown FROM teacher

SELECT teacher.Hometown FROM teacher
SELECT * FROM teacher WHERE teacher.Hometown != "value"
SELECT teacher.Name FROM teacher WHERE teacher.Hometown != "value"

SELECT teacher.Age FROM teacher
SELECT * FROM teacher WHERE teacher.Age = "value"
SELECT * FROM teacher WHERE teacher.Age = "value" OR teacher.Age = "value"
SELECT teacher.Name FROM teacher WHERE teacher.Age = "value" OR teacher.Age = "value"

SELECT * FROM teacher ORDER BY teacher.Age ASC
SELECT * FROM teacher ORDER BY teacher.Age ASC LIMIT 1
SELECT teacher.Hometown FROM teacher ORDER BY teacher.Age ASC LIMIT 1

SELECT teacher.Hometown FROM teacher
SELECT * FROM teacher ORDER BY teacher.Hometown ASC
SELECT teacher.Hometown , COUNT(*) FROM teacher GROUP BY teacher.Hometown

SELECT COUNT(*) FROM teacher
SELECT teacher.Hometown , COUNT(*) FROM teacher GROUP BY teacher.Hometown
SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown ORDER BY COUNT(*) DESC LIMIT 1

SELECT COUNT(*) FROM teacher
SELECT teacher.Hometown , COUNT(*) FROM teacher GROUP BY teacher.Hometown
SELECT teacher.Hometown FROM teacher GROUP BY teacher.Hometown HAVING COUNT(*) >= "value"

SELECT * FROM course_arrange
SELECT course.Course FROM course_arrange JOIN course

SELECT * FROM course_arrange
SELECT teacher.Name , course.Course FROM course_arrange JOIN course JOIN teacher
SELECT teacher.Name , course.Course FROM course_arrange JOIN teacher JOIN course ORDER BY teacher.Name ASC

SELECT * FROM course_arrange
SELECT teacher.Name , course.Course FROM course_arrange JOIN course JOIN teacher
SELECT teacher.Name FROM course_arrange JOIN teacher JOIN course WHERE course.Course = "value"

SELECT teacher.Name FROM teacher
SELECT teacher.Name , COUNT(*) FROM teacher JOIN course_arrange GROUP BY course_arrange.Teacher_ID

SELECT teacher.Name FROM teacher
SELECT teacher.Name , COUNT(*) FROM teacher JOIN course_arrange GROUP BY course_arrange.Teacher_ID
SELECT teacher.Name FROM course_arrange JOIN teacher GROUP BY course_arrange.Teacher_ID HAVING COUNT(*) >= "value"

SELECT * FROM Other_Available_Features
SELECT COUNT(*) FROM Other_Available_Features

SELECT * FROM Other_Available_Features WHERE Other_Available_Features.feature_name = "value"
SELECT Ref_Feature_Types.feature_type_name FROM Ref_Feature_Types JOIN Other_Available_Features WHERE Other_Available_Features.feature_name = "value"

SELECT Ref_Property_Types.property_type_description FROM Ref_Property_Types
SELECT Ref_Property_Types.property_type_description , Ref_Property_Types.property_type_code FROM Ref_Property_Types JOIN Properties GROUP BY Ref_Property_Types.property_type_code

SELECT AREA_CODE_STATE.area_code , AREA_CODE_STATE.state FROM AREA_CODE_STATE
SELECT COUNT(AREA_CODE_STATE.area_code) FROM AREA_CODE_STATE

SELECT * FROM CONTESTANTS
SELECT CONTESTANTS.contestant_name FROM CONTESTANTS
SELECT CONTESTANTS.contestant_name , CONTESTANTS.contestant_number FROM CONTESTANTS
SELECT CONTESTANTS.contestant_name , CONTESTANTS.contestant_number FROM CONTESTANTS ORDER BY CONTESTANTS.contestant_name DESC

SELECT * FROM VOTES
SELECT * , VOTES.vote_id FROM VOTES
SELECT VOTES.vote_id , VOTES.phone_number FROM VOTES

SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE
SELECT MAX(AREA_CODE_STATE.area_code) FROM AREA_CODE_STATE
SELECT MIN(AREA_CODE_STATE.area_code) FROM AREA_CODE_STATE
SELECT MAX(AREA_CODE_STATE.area_code) , MIN(AREA_CODE_STATE.area_code) FROM AREA_CODE_STATE

SELECT * FROM VOTES
SELECT * FROM VOTES WHERE VOTES.state = "value"
SELECT VOTES.created FROM VOTES WHERE VOTES.state = "value" ORDER BY VOTES.created DESC LIMIT 1

SELECT * FROM CONTESTANTS
SELECT CONTESTANTS.contestant_name FROM CONTESTANTS
SELECT CONTESTANTS.contestant_name FROM CONTESTANTS WHERE CONTESTANTS.contestant_name != "value"

SELECT * FROM VOTES
SELECT VOTES.state FROM VOTES
SELECT VOTES.state , VOTES.created FROM VOTES

SELECT * FROM CONTESTANTS
SELECT * FROM VOTES
SELECT CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES GROUP BY VOTES.contestant_number HAVING COUNT(*) >= "value"
SELECT CONTESTANTS.contestant_number , CONTESTANTS.contestant_name FROM CONTESTANTS JOIN VOTES GROUP BY VOTES.contestant_number HAVING COUNT(*) >= "value"

SELECT * FROM CONTESTANTS
SELECT * FROM VOTES
SELECT CONTESTANTS.contestant_name , CONTESTANTS.contestant_name FROM VOTES JOIN CONTESTANTS GROUP BY VOTES.contestant_number ORDER BY COUNT(*) ASC LIMIT 1
SELECT CONTESTANTS.contestant_number , CONTESTANTS.contestant_name FROM VOTES JOIN CONTESTANTS GROUP BY VOTES.contestant_number ORDER BY COUNT(*) ASC LIMIT 1

SELECT * FROM VOTES
SELECT * FROM VOTES WHERE VOTES.state = "value" OR VOTES.state = "value"
SELECT COUNT(*) FROM VOTES WHERE VOTES.state = "value" OR VOTES.state = "value"

SELECT * FROM CONTESTANTS
SELECT CONTESTANTS.contestant_name FROM CONTESTANTS WHERE CONTESTANTS.contestant_number NOT IN ( SELECT VOTES.contestant_number FROM VOTES )
SELECT COUNT(*) FROM CONTESTANTS WHERE CONTESTANTS.contestant_number NOT IN ( SELECT VOTES.contestant_number FROM VOTES )

SELECT AREA_CODE_STATE.area_code , AREA_CODE_STATE.state FROM AREA_CODE_STATE
SELECT * FROM VOTES
SELECT AREA_CODE_STATE.area_code , COUNT(*) FROM AREA_CODE_STATE JOIN VOTES GROUP BY AREA_CODE_STATE.area_code
SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN VOTES GROUP BY AREA_CODE_STATE.area_code ORDER BY COUNT(*) DESC LIMIT 1

SELECT * FROM VOTES
SELECT * FROM VOTES JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = "value"
SELECT VOTES.created , VOTES.state , VOTES.phone_number FROM VOTES JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = "value"

SELECT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE
SELECT AREA_CODE_STATE.area_code FROM VOTES JOIN AREA_CODE_STATE JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = "value"
SELECT AREA_CODE_STATE.area_code FROM VOTES JOIN AREA_CODE_STATE JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = "value" INTERSECT SELECT AREA_CODE_STATE.area_code FROM VOTES JOIN AREA_CODE_STATE JOIN CONTESTANTS WHERE CONTESTANTS.contestant_name = "value"

SELECT Departments.department_description FROM Degree_Programs JOIN Departments GROUP BY Degree_Programs.department_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT Departments.department_name , Degree_Programs.department_id FROM Departments JOIN Degree_Programs GROUP BY Degree_Programs.department_id ORDER BY COUNT(*) DESC LIMIT 1

SELECT Departments.department_name FROM Departments JOIN Degree_Programs WHERE Departments.department_name = "value"
SELECT COUNT(*) FROM Departments JOIN Degree_Programs WHERE Departments.department_name = "value"

SELECT * FROM Courses JOIN Sections GROUP BY Sections.course_id HAVING COUNT(*) = "value"
SELECT Courses.course_name , Sections.course_id FROM Sections JOIN Courses GROUP BY Sections.course_id HAVING COUNT(*) <= "value"

SELECT Semesters.semester_name , Student_Enrolment.semester_id FROM Semesters JOIN Student_Enrolment GROUP BY Student_Enrolment.semester_id ORDER BY COUNT(*) ASC LIMIT 1
SELECT Semesters.semester_name , Student_Enrolment.semester_id FROM Semesters JOIN Student_Enrolment GROUP BY Student_Enrolment.semester_id ORDER BY COUNT(*) DESC LIMIT 1

SELECT Departments.department_name FROM Departments WHERE Departments.department_name LIKE "value"
SELECT Departments.department_description FROM Departments WHERE Departments.department_name LIKE "value"

SELECT COUNT(*) FROM Student_Enrolment GROUP BY Student_Enrolment.semester_id HAVING Student_Enrolment.semester_id = "value"
SELECT Students.first_name , Students.middle_name , Students.last_name FROM Student_Enrolment JOIN Students GROUP BY Student_Enrolment.semester_id HAVING COUNT(Student_Enrolment.semester_id) = "value"

SELECT COUNT(*) FROM Degree_Programs JOIN Student_Enrolment WHERE Degree_Programs.degree_summary_name = "value"
SELECT Students.first_name , Students.middle_name , Students.last_name FROM Degree_Programs JOIN Student_Enrolment JOIN Students WHERE Degree_Programs.degree_summary_name = "value"

SELECT Degree_Programs.degree_summary_description FROM Degree_Programs JOIN Student_Enrolment GROUP BY Student_Enrolment.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT Degree_Programs.degree_summary_name FROM Degree_Programs JOIN Student_Enrolment GROUP BY Student_Enrolment.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1

SELECT Courses.course_description FROM Courses JOIN Student_Enrolment_Courses JOIN Student_Enrolment GROUP BY Student_Enrolment.degree_program_id ORDER BY COUNT(*) ASC LIMIT 1
SELECT Courses.course_description FROM Courses JOIN Student_Enrolment_Courses JOIN Student_Enrolment GROUP BY Student_Enrolment.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT Student_Enrolment.degree_program_id , Degree_Programs.degree_summary_description FROM Degree_Programs JOIN Student_Enrolment GROUP BY Student_Enrolment.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1

SELECT Student_Enrolment.student_id , Students.first_name , Students.last_name FROM Student_Enrolment JOIN Students GROUP BY Student_Enrolment.student_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT Student_Enrolment.student_id , Students.first_name , Students.last_name FROM Student_Enrolment JOIN Students GROUP BY Student_Enrolment.student_id ORDER BY COUNT(*) DESC LIMIT 1

SELECT Semesters.semester_description FROM Semesters WHERE Semesters.semester_id NOT IN ( SELECT Student_Enrolment.semester_id FROM Student_Enrolment )
SELECT Semesters.semester_name FROM Semesters WHERE Semesters.semester_id NOT IN ( SELECT Student_Enrolment.semester_id FROM Student_Enrolment )

SELECT Courses.course_name FROM Courses JOIN Student_Enrolment_Courses GROUP BY Courses.course_name ORDER BY COUNT(*) ASC LIMIT 1
SELECT Courses.course_name , COUNT(*) FROM Courses GROUP BY Courses.course_name ORDER BY COUNT(*) DESC LIMIT 1
SELECT Courses.course_name FROM Courses GROUP BY Courses.course_name ORDER BY COUNT(*) DESC LIMIT 1

SELECT COUNT(*) FROM Students JOIN Addresses WHERE Addresses.state_province_county = "value"
SELECT COUNT(*) FROM Students WHERE Students.student_id NOT IN ( SELECT Student_Enrolment.student_id FROM Student_Enrolment JOIN Addresses WHERE Addresses.state_province_county = "value" )
SELECT Students.last_name FROM Students WHERE Students.student_id NOT IN ( SELECT Student_Enrolment.student_id FROM Student_Enrolment JOIN Addresses WHERE Addresses.state_province_county = "value" )

SELECT Transcripts.transcript_date , Transcript_Contents.transcript_id FROM Transcripts JOIN Transcript_Contents GROUP BY Transcript_Contents.transcript_id HAVING COUNT(*) = "value"
SELECT Transcripts.transcript_date , Transcript_Contents.transcript_id FROM Transcripts JOIN Transcript_Contents GROUP BY Transcript_Contents.transcript_id HAVING COUNT(*) >= "value"

SELECT Students.permanent_address_id FROM Students WHERE Students.first_name = "value" AND Students.last_name = "value"
SELECT Students.cell_mobile_number FROM Students WHERE Students.first_name = "value" AND Students.last_name = "value"

SELECT Students.first_name , Students.middle_name , Students.last_name FROM Students ORDER BY Students.date_first_registered DESC LIMIT 1
SELECT Students.first_name , Students.middle_name , Students.last_name FROM Students ORDER BY Students.date_first_registered DESC LIMIT 1

SELECT Students.first_name , Students.middle_name , Students.last_name FROM Students ORDER BY Students.last_name ASC LIMIT 1
SELECT Students.first_name , Students.middle_name , Students.last_name FROM Students ORDER BY Students.last_name ASC LIMIT 1

SELECT Students.current_address_id FROM Students GROUP BY Students.current_address_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT COUNT(*) FROM Students WHERE Students.current_address_id IN ( SELECT Students.current_address_id FROM Students JOIN Addresses GROUP BY Students.current_address_id ORDER BY COUNT(*) DESC LIMIT 1 )
SELECT Addresses.line_1 , Addresses.line_3 FROM Addresses JOIN Students GROUP BY Students.current_address_id ORDER BY COUNT(*) DESC LIMIT 1

SELECT Transcripts.other_details FROM Transcripts ORDER BY Transcripts.transcript_date ASC LIMIT 1
SELECT Transcripts.transcript_date , Transcripts.other_details FROM Transcripts ORDER BY Transcripts.transcript_date ASC LIMIT 1

SELECT Transcripts.transcript_date FROM Transcripts ORDER BY Transcripts.transcript_date ASC LIMIT 1
SELECT Transcripts.transcript_date FROM Transcripts ORDER BY Transcripts.transcript_date DESC LIMIT 1

SELECT COUNT(*) FROM Student_Enrolment_Courses JOIN Transcript_Contents JOIN Transcripts GROUP BY Student_Enrolment_Courses.course_id HAVING COUNT(*) <= "value"
SELECT COUNT(*) FROM Student_Enrolment_Courses JOIN Transcript_Contents JOIN Transcripts GROUP BY Student_Enrolment_Courses.course_id HAVING COUNT(*) <= "value"

SELECT Transcripts.other_details FROM Transcript_Contents JOIN Transcripts GROUP BY Transcript_Contents.transcript_id ORDER BY COUNT(*) ASC LIMIT 1
SELECT Transcripts.transcript_date , Transcript_Contents.transcript_id FROM Transcripts JOIN Transcript_Contents GROUP BY Transcript_Contents.transcript_id ORDER BY COUNT(*) ASC LIMIT 1

SELECT Student_Enrolment.semester_id FROM Student_Enrolment WHERE Student_Enrolment.semester_id = "value"
SELECT Student_Enrolment.semester_id FROM Student_Enrolment WHERE Student_Enrolment.semester_id = "value"
SELECT Student_Enrolment.semester_id FROM Student_Enrolment WHERE Degree_Programs.degree_summary_name = "value" INTERSECT SELECT Student_Enrolment.semester_id FROM Student_Enrolment WHERE Degree_Programs.degree_summary_name = "value"

SELECT * FROM Owners
SELECT * FROM Professionals
SELECT Professionals.state FROM Professionals
SELECT Owners.state FROM Owners INTERSECT SELECT Professionals.state FROM Professionals

SELECT Dogs.age FROM Dogs
SELECT MAX(Dogs.age) , MIN(Dogs.age) FROM Dogs
SELECT Dogs.age FROM Dogs JOIN Treatments
SELECT AVG(Dogs.age) FROM Dogs JOIN Treatments

SELECT * FROM Professionals WHERE Professionals.role_code = "value"
SELECT COUNT(*) FROM Professionals WHERE Professionals.role_code = "value" AND Professionals.state = "value"
SELECT COUNT(*) FROM Professionals WHERE Professionals.state = "value"
SELECT * FROM Professionals JOIN Treatments GROUP BY Professionals.professional_id HAVING COUNT(*) = "value"
SELECT Professionals.professional_id , Professionals.last_name , Professionals.cell_number FROM Professionals JOIN Treatments WHERE Professionals.state = "value" UNION SELECT Professionals.professional_id , Professionals.last_name , Professionals.cell_number FROM Professionals JOIN Treatments GROUP BY Professionals.professional_id HAVING COUNT(*) > "value"

SELECT Dogs.name , SUM(Treatments.cost_of_treatment) FROM Treatments JOIN Dogs GROUP BY Dogs.dog_id
SELECT Dogs.name , Treatments.cost_of_treatment FROM Dogs JOIN Treatments GROUP BY Dogs.dog_id HAVING SUM(Treatments.cost_of_treatment) > "value"
SELECT Dogs.name , Treatments.cost_of_treatment FROM Dogs JOIN Treatments GROUP BY Dogs.dog_id HAVING SUM(Treatments.cost_of_treatment) > "value"

SELECT Professionals.first_name , Professionals.last_name , Owners.last_name FROM Professionals
SELECT Dogs.name FROM Professionals JOIN Dogs
SELECT Professionals.first_name FROM Professionals EXCEPT SELECT Professionals.first_name FROM Professionals JOIN Dogs

SELECT Professionals.first_name , Treatments.treatment_type_code FROM Treatments JOIN Professionals
SELECT Professionals.professional_id , Professionals.first_name , Professionals.email_address , Treatments.treatment_type_code FROM Professionals JOIN Treatments
SELECT Professionals.professional_id , Professionals.role_code , Professionals.email_address FROM Professionals EXCEPT SELECT Professionals.professional_id , Professionals.role_code , Professionals.email_address FROM Professionals JOIN Treatments

SELECT Owners.owner_id , COUNT(*) FROM Owners JOIN Dogs GROUP BY Dogs.owner_id
SELECT Owners.owner_id FROM Owners JOIN Dogs GROUP BY Dogs.owner_id HAVING COUNT(*) = "value"
SELECT Owners.owner_id FROM Owners JOIN Dogs GROUP BY Dogs.owner_id ORDER BY COUNT(*) DESC LIMIT 1

SELECT Professionals.last_name , COUNT(*) FROM Professionals JOIN Treatments GROUP BY Professionals.professional_id
SELECT Professionals.first_name FROM Professionals JOIN Treatments GROUP BY Professionals.professional_id HAVING COUNT(*) = "value"
SELECT Professionals.first_name FROM Treatments JOIN Professionals GROUP BY Professionals.professional_id HAVING COUNT(*) >= "value"
SELECT Professionals.professional_id , Professionals.role_code , Professionals.first_name FROM Professionals JOIN Treatments GROUP BY Professionals.professional_id HAVING COUNT(*) >= "value"

SELECT Dogs.breed_code , COUNT(*) FROM Dogs GROUP BY Dogs.breed_code
SELECT Dogs.breed_code FROM Dogs GROUP BY Dogs.breed_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Dogs.breed_code FROM Dogs GROUP BY Dogs.breed_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Breeds.breed_name FROM Dogs JOIN Breeds GROUP BY Dogs.breed_code ORDER BY COUNT(*) DESC LIMIT 1

SELECT Dogs.name , SUM(Treatments.cost_of_treatment) FROM Treatments JOIN Dogs GROUP BY Dogs.dog_id
SELECT Owners.first_name , Owners.last_name , SUM(Treatments.cost_of_treatment) FROM Owners JOIN Dogs JOIN Treatments
SELECT Owners.owner_id , Owners.first_name , Owners.last_name FROM Dogs JOIN Owners JOIN Treatments GROUP BY Owners.owner_id ORDER BY COUNT(*) DESC LIMIT 1

SELECT Treatment_Types.treatment_type_code , Treatment_Types.treatment_type_description FROM Treatment_Types
SELECT Treatment_Types.treatment_type_code , Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types GROUP BY Treatment_Types.treatment_type_code ORDER BY SUM(Treatments.cost_of_treatment) DESC
SELECT Treatment_Types.treatment_type_code , Treatment_Types.treatment_type_description , COUNT(Treatments.cost_of_treatment) FROM Treatment_Types JOIN Treatments GROUP BY Treatment_Types.treatment_type_code ORDER BY SUM(Treatments.cost_of_treatment) DESC
SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments GROUP BY Treatment_Types.treatment_type_code ORDER BY SUM(Treatments.cost_of_treatment) ASC LIMIT 1

SELECT Dogs.name , SUM(Treatments.cost_of_treatment) FROM Treatments JOIN Dogs GROUP BY Dogs.dog_id
SELECT COUNT(*) FROM ( SELECT COUNT(*) FROM Dogs JOIN Treatments GROUP BY Dogs.dog_id HAVING COUNT(Treatments.cost_of_treatment) > "value" )
SELECT Owners.owner_id , Owners.last_name FROM Dogs JOIN Owners JOIN Treatments GROUP BY Owners.owner_id HAVING COUNT(Treatments.cost_of_treatment) > "value"
SELECT Owners.owner_id , Owners.last_name FROM Owners JOIN Dogs JOIN Treatments GROUP BY Owners.owner_id ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1

SELECT Professionals.first_name , Treatments.treatment_type_code FROM Professionals JOIN Treatments
SELECT Professionals.first_name , Treatments.treatment_type_code , COUNT(*) FROM Professionals JOIN Treatments GROUP BY Treatments.treatment_type_code
SELECT Professionals.first_name , Professionals.cell_number , COUNT(*) FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING COUNT(*) = "value"
SELECT Treatments.professional_id , Professionals.first_name , COUNT(*) FROM Treatments JOIN Professionals GROUP BY Treatments.professional_id HAVING COUNT(*) >= "value"

SELECT MIN(Treatments.cost_of_treatment) , MAX(Treatments.cost_of_treatment) , AVG(Treatments.cost_of_treatment) FROM Treatments
SELECT Professionals.first_name , Professionals.last_name FROM Treatments JOIN Professionals ORDER BY Treatments.cost_of_treatment ASC LIMIT 1
SELECT Professionals.first_name , Professionals.last_name FROM Treatments JOIN Professionals ORDER BY Treatments.cost_of_treatment DESC LIMIT 1
SELECT Professionals.first_name , Professionals.last_name FROM Treatments JOIN Professionals WHERE Treatments.cost_of_treatment < ( SELECT AVG(Treatments.cost_of_treatment) FROM Treatments )

SELECT Dogs.breed_code , COUNT(*) FROM Dogs GROUP BY Dogs.breed_code
SELECT Dogs.breed_code FROM Dogs GROUP BY Dogs.breed_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT Dogs.breed_code FROM Dogs GROUP BY Dogs.breed_code ORDER BY COUNT(*) ASC LIMIT 1
SELECT Dogs.breed_code , Treatments.date_of_treatment FROM Dogs JOIN Treatments GROUP BY Dogs.breed_code ORDER BY COUNT(*) ASC LIMIT 1

SELECT Dogs.name FROM Dogs JOIN Owners WHERE Owners.city = "value"
SELECT Dogs.name , Owners.first_name FROM Dogs JOIN Owners WHERE Owners.city = "value"
SELECT Dogs.name , Owners.first_name FROM Dogs JOIN Owners WHERE Owners.state = "value"

SELECT * FROM Dogs ORDER BY Dogs.age DESC LIMIT 1
SELECT Owners.last_name FROM Owners JOIN Dogs ORDER BY Dogs.age DESC LIMIT 1
SELECT Owners.last_name FROM Owners JOIN Dogs ORDER BY Dogs.age ASC LIMIT 1

SELECT Professionals.city , Professionals.state FROM Professionals
SELECT COUNT(*) FROM Professionals WHERE Professionals.state = "value"
SELECT Professionals.email_address FROM Professionals WHERE Professionals.state = "value" OR Professionals.state = "value"

SELECT Professionals.state FROM Professionals
SELECT COUNT(*) FROM Professionals WHERE Professionals.state = "value"
SELECT Professionals.role_code , Professionals.street , Professionals.city FROM Professionals WHERE Professionals.state = "value"
SELECT Professionals.role_code , Professionals.city , Professionals.street FROM Professionals WHERE Professionals.city LIKE "value"

SELECT Owners.state FROM Owners
SELECT COUNT(*) FROM Owners WHERE Owners.state = "value"
SELECT Owners.first_name , Owners.last_name , Owners.email_address FROM Owners WHERE Owners.state LIKE "value"

SELECT Dogs.age FROM Dogs ORDER BY Dogs.age DESC
SELECT COUNT(*) FROM Dogs WHERE Dogs.age < "value"
SELECT COUNT(*) FROM Dogs WHERE Dogs.age < ( SELECT AVG(Dogs.age) FROM Dogs )

SELECT * FROM Treatments
SELECT * FROM Treatments ORDER BY Treatments.cost_of_treatment ASC
SELECT * FROM Treatments ORDER BY Treatments.cost_of_treatment DESC
SELECT * FROM Treatments ORDER BY Treatments.cost_of_treatment DESC LIMIT 1

SELECT * FROM Owners
SELECT * FROM Dogs
SELECT COUNT(*) FROM Dogs WHERE Dogs.dog_id IN ( SELECT Treatments.dog_id FROM Treatments )
SELECT COUNT(*) FROM Owners WHERE Owners.owner_id NOT IN ( SELECT Dogs.owner_id FROM Dogs WHERE Dogs.dog_id = "value" )

SELECT * FROM Owners
SELECT COUNT(*) FROM Owners WHERE Owners.state = "value"
SELECT COUNT(*) FROM Owners WHERE Owners.owner_id NOT IN ( SELECT Dogs.owner_id FROM Dogs JOIN Owners WHERE Owners.state = "value" )

SELECT COUNT(*) FROM Professionals
SELECT COUNT(*) FROM Professionals WHERE Professionals.city = "value"
SELECT COUNT(*) FROM Professionals WHERE Professionals.professional_id NOT IN ( SELECT Treatments.professional_id FROM Treatments JOIN Professionals WHERE Professionals.city = "value" )

